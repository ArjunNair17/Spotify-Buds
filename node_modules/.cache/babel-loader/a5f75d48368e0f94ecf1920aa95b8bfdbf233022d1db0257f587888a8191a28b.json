{"ast":null,"code":"import { CodedError, Platform } from 'expo-modules-core';\nimport { KeepAwakeEventState } from './KeepAwake.types';\nconst wakeLockMap = {};\n/** Wraps the webWakeLock API https://developer.mozilla.org/en-US/docs/Web/API/Screen_Wake_Lock_API */\nexport default {\n  async isAvailableAsync() {\n    if (Platform.isDOMAvailable) {\n      return 'wakeLock' in navigator;\n    }\n    return false;\n  },\n  async activate(tag) {\n    if (!Platform.isDOMAvailable) {\n      return;\n    }\n    const wakeLock = await navigator.wakeLock.request('screen');\n    wakeLockMap[tag] = wakeLock;\n  },\n  async deactivate(tag) {\n    if (!Platform.isDOMAvailable) {\n      return;\n    }\n    if (wakeLockMap[tag]) {\n      wakeLockMap[tag].release?.();\n      delete wakeLockMap[tag];\n    } else {\n      throw new CodedError('ERR_KEEP_AWAKE_TAG_INVALID', `The wake lock with tag ${tag} has not activated yet`);\n    }\n  },\n  addListenerForTag(tag, listener) {\n    const eventListener = () => {\n      listener({\n        state: KeepAwakeEventState.RELEASE\n      });\n    };\n    const sentinel = wakeLockMap[tag];\n    if (sentinel) {\n      if ('addEventListener' in sentinel) {\n        sentinel.addEventListener?.('release', eventListener);\n      } else {\n        sentinel.onrelease = eventListener;\n      }\n    }\n    return {\n      remove: () => {\n        const sentinel = wakeLockMap[tag];\n        if (sentinel) {\n          if (sentinel.removeEventListener) {\n            sentinel.removeEventListener('release', eventListener);\n          } else {\n            sentinel.onrelease = null;\n          }\n        }\n      }\n    };\n  }\n};","map":{"version":3,"names":["CodedError","Platform","KeepAwakeEventState","wakeLockMap","isAvailableAsync","isDOMAvailable","navigator","activate","tag","wakeLock","request","deactivate","release","addListenerForTag","listener","eventListener","state","RELEASE","sentinel","addEventListener","onrelease","remove","removeEventListener"],"sources":["/Users/arjunsnair/Documents/GitHub/SpotifyAppCS35L/node_modules/expo-keep-awake/src/ExpoKeepAwake.web.ts"],"sourcesContent":["import { CodedError, Platform, Subscription } from 'expo-modules-core';\n\nimport { KeepAwakeEventState, KeepAwakeListener } from './KeepAwake.types';\n\nconst wakeLockMap: Record<string, WakeLockSentinel> = {};\n\ntype WakeLockSentinel = {\n  onrelease: null | ((event: any) => void);\n  released: boolean;\n  type: 'screen';\n  release?: Function;\n\n  addEventListener?: (event: string, listener: (event: any) => void) => void;\n  removeEventListener?: (event: string, listener: (event: any) => void) => void;\n};\n\ndeclare const navigator: {\n  wakeLock: {\n    request(type: 'screen'): Promise<WakeLockSentinel>;\n  };\n};\n\n/** Wraps the webWakeLock API https://developer.mozilla.org/en-US/docs/Web/API/Screen_Wake_Lock_API */\nexport default {\n  async isAvailableAsync() {\n    if (Platform.isDOMAvailable) {\n      return 'wakeLock' in navigator;\n    }\n    return false;\n  },\n  async activate(tag: string) {\n    if (!Platform.isDOMAvailable) {\n      return;\n    }\n    const wakeLock = await navigator.wakeLock.request('screen');\n    wakeLockMap[tag] = wakeLock;\n  },\n  async deactivate(tag: string) {\n    if (!Platform.isDOMAvailable) {\n      return;\n    }\n    if (wakeLockMap[tag]) {\n      wakeLockMap[tag].release?.();\n      delete wakeLockMap[tag];\n    } else {\n      throw new CodedError(\n        'ERR_KEEP_AWAKE_TAG_INVALID',\n        `The wake lock with tag ${tag} has not activated yet`\n      );\n    }\n  },\n  addListenerForTag(tag: string, listener: KeepAwakeListener): Subscription {\n    const eventListener = () => {\n      listener({ state: KeepAwakeEventState.RELEASE });\n    };\n    const sentinel = wakeLockMap[tag];\n    if (sentinel) {\n      if ('addEventListener' in sentinel) {\n        sentinel.addEventListener?.('release', eventListener);\n      } else {\n        sentinel.onrelease = eventListener;\n      }\n    }\n    return {\n      remove: () => {\n        const sentinel = wakeLockMap[tag];\n        if (sentinel) {\n          if (sentinel.removeEventListener) {\n            sentinel.removeEventListener('release', eventListener);\n          } else {\n            sentinel.onrelease = null;\n          }\n        }\n      },\n    };\n  },\n};\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAsB,mBAAmB;AAEtE,SAASC,mBAAmB,QAA2B,mBAAmB;AAE1E,MAAMC,WAAW,GAAqC,EAAE;AAkBxD;AACA,eAAe;EACb,MAAMC,gBAAgBA,CAAA;IACpB,IAAIH,QAAQ,CAACI,cAAc,EAAE;MAC3B,OAAO,UAAU,IAAIC,SAAS;;IAEhC,OAAO,KAAK;EACd,CAAC;EACD,MAAMC,QAAQA,CAACC,GAAW;IACxB,IAAI,CAACP,QAAQ,CAACI,cAAc,EAAE;MAC5B;;IAEF,MAAMI,QAAQ,GAAG,MAAMH,SAAS,CAACG,QAAQ,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC3DP,WAAW,CAACK,GAAG,CAAC,GAAGC,QAAQ;EAC7B,CAAC;EACD,MAAME,UAAUA,CAACH,GAAW;IAC1B,IAAI,CAACP,QAAQ,CAACI,cAAc,EAAE;MAC5B;;IAEF,IAAIF,WAAW,CAACK,GAAG,CAAC,EAAE;MACpBL,WAAW,CAACK,GAAG,CAAC,CAACI,OAAO,GAAE,CAAE;MAC5B,OAAOT,WAAW,CAACK,GAAG,CAAC;KACxB,MAAM;MACL,MAAM,IAAIR,UAAU,CAClB,4BAA4B,EAC5B,0BAA0BQ,GAAG,wBAAwB,CACtD;;EAEL,CAAC;EACDK,iBAAiBA,CAACL,GAAW,EAAEM,QAA2B;IACxD,MAAMC,aAAa,GAAGA,CAAA,KAAK;MACzBD,QAAQ,CAAC;QAAEE,KAAK,EAAEd,mBAAmB,CAACe;MAAO,CAAE,CAAC;IAClD,CAAC;IACD,MAAMC,QAAQ,GAAGf,WAAW,CAACK,GAAG,CAAC;IACjC,IAAIU,QAAQ,EAAE;MACZ,IAAI,kBAAkB,IAAIA,QAAQ,EAAE;QAClCA,QAAQ,CAACC,gBAAgB,GAAG,SAAS,EAAEJ,aAAa,CAAC;OACtD,MAAM;QACLG,QAAQ,CAACE,SAAS,GAAGL,aAAa;;;IAGtC,OAAO;MACLM,MAAM,EAAEA,CAAA,KAAK;QACX,MAAMH,QAAQ,GAAGf,WAAW,CAACK,GAAG,CAAC;QACjC,IAAIU,QAAQ,EAAE;UACZ,IAAIA,QAAQ,CAACI,mBAAmB,EAAE;YAChCJ,QAAQ,CAACI,mBAAmB,CAAC,SAAS,EAAEP,aAAa,CAAC;WACvD,MAAM;YACLG,QAAQ,CAACE,SAAS,GAAG,IAAI;;;MAG/B;KACD;EACH;CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}