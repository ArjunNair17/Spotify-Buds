{"ast":null,"code":"var _jsxFileName = \"/Users/arjunsnair/Documents/GitHub/SpotifyAppCS35L/src/webapp.js\",\n  _s = $RefreshSig$();\n// React example for handling authentication and Spotify authorization\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = '4db376ff1b0941de8908d1748f1eb266';\nconst redirectUri = 'http://localhost:3000/main';\nconst scopes = ['user-read-currently-playing', 'user-read-private'];\nconst Login = _ref => {\n  _s();\n  let {\n    onLogin\n  } = _ref;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      // Make API request to authenticate user with Spotify credentials\n      const {\n        data\n      } = await axios.post('/authenticate', {\n        username,\n        password\n      });\n      onLogin(data);\n    } catch (error) {\n      // Handle authentication error\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      placeholder: \"Username/Email\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = Login;\nconst Blud = () => {\n  const handleLogin = async authData => {\n    try {\n      // Redirect to Spotify authorization\n      const authorizeUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scopes.join(' '))}&response_type=code`;\n      window.location.href = authorizeUrl;\n    } catch (error) {\n      // Handle authorization error\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Blud;\nexport default Blud;\nvar _c, _c2;\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"Blud\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","clientId","redirectUri","scopes","Login","_ref","_s","onLogin","username","setUsername","password","setPassword","handleLogin","e","preventDefault","data","post","error","console","onSubmit","children","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","Blud","authData","authorizeUrl","encodeURIComponent","join","window","location","href","_c2","$RefreshReg$"],"sources":["/Users/arjunsnair/Documents/GitHub/SpotifyAppCS35L/src/webapp.js"],"sourcesContent":["// React example for handling authentication and Spotify authorization\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst clientId = '4db376ff1b0941de8908d1748f1eb266';\nconst redirectUri = 'http://localhost:3000/main';\nconst scopes = ['user-read-currently-playing', 'user-read-private'];\n\nconst Login = ({ onLogin }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    try {\n      // Make API request to authenticate user with Spotify credentials\n      const { data } = await axios.post('/authenticate', {\n        username,\n        password,\n      });\n\n      onLogin(data);\n    } catch (error) {\n      // Handle authentication error\n      console.error(error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleLogin}>\n      <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} placeholder=\"Username/Email\" required />\n      <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" required />\n      <button type=\"submit\">Log In</button>\n    </form>\n  );\n};\n\nconst Blud = () => {\n  const handleLogin = async (authData) => {\n    try {\n      // Redirect to Spotify authorization\n      const authorizeUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${encodeURIComponent(scopes.join(' '))}&response_type=code`;\n      window.location.href = authorizeUrl;\n    } catch (error) {\n      // Handle authorization error\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>My App</h1>\n      <Login onLogin={handleLogin} />\n    </div>\n  );\n};\n\nexport default Blud;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}