{"ast":null,"code":"var _jsxFileName = \"/Users/arjunsnair/Documents/GitHub/SpotifyAppCS35L/src/main.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport async function redirectToAuthCodeFlow(clientId) {\n  const verifier = generateCodeVerifier(128);\n  const challenge = await generateCodeChallenge(verifier);\n  localStorage.setItem(\"verifier\", verifier);\n  const params = new URLSearchParams();\n  params.append(\"client_id\", clientId);\n  params.append(\"response_type\", \"code\");\n  params.append(\"redirect_uri\", \"http://localhost:3000/main\");\n  params.append(\"scope\", \"user-read-currently-playing user-read-recently-played\");\n  params.append(\"code_challenge_method\", \"S256\");\n  params.append(\"code_challenge\", challenge);\n  document.location = `https://accounts.spotify.com/authorize?${params.toString()}`;\n}\nfunction generateCodeVerifier(length) {\n  let text = '';\n  let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  return text;\n}\nasync function generateCodeChallenge(codeVerifier) {\n  const data = new TextEncoder().encode(codeVerifier);\n  const digest = await window.crypto.subtle.digest('SHA-256', data);\n  return btoa(String.fromCharCode.apply(null, [...new Uint8Array(digest)])).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\nexport async function getAccessToken(clientId, code) {\n  const verifier = localStorage.getItem(\"verifier\");\n  const params = new URLSearchParams();\n  params.append(\"client_id\", clientId);\n  params.append(\"grant_type\", \"authorization_code\");\n  params.append(\"code\", code);\n  params.append(\"redirect_uri\", \"http://localhost:3000/main\");\n  params.append(\"code_verifier\", verifier);\n  const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    body: params\n  });\n  const {\n    access_token\n  } = await result.json();\n  return access_token;\n}\nasync function fetchProfile(token) {\n  const result = await fetch(\"https://api.spotify.com/v1/me\", {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return await result.json();\n}\nexport default async function WebApp() {\n  const clientID = \"4db376ff1b0941de8908d1748f1eb266\";\n  const autorizeEndpoint = \"https://accounts.spotify.com/authorize\";\n  const redirectURL = \"http://localhost:300/webapp\";\n  const params = new URLSearchParams(window.location.search);\n  const code = params.get('code');\n  if (!code) {\n    redirectToAuthCodeFlow(clientID);\n  } else {\n    const accessToken = await getAccessToken(clientID, code);\n    const profile = await fetchProfile(accessToken);\n    console.log(profile);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n_c = WebApp;\n;\nvar _c;\n$RefreshReg$(_c, \"WebApp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","redirectToAuthCodeFlow","clientId","verifier","generateCodeVerifier","challenge","generateCodeChallenge","localStorage","setItem","params","URLSearchParams","append","document","location","toString","length","text","possible","i","charAt","Math","floor","random","codeVerifier","data","TextEncoder","encode","digest","window","crypto","subtle","btoa","String","fromCharCode","apply","Uint8Array","replace","getAccessToken","code","getItem","result","fetch","method","headers","body","access_token","json","fetchProfile","token","Authorization","WebApp","clientID","autorizeEndpoint","redirectURL","search","get","accessToken","profile","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/arjunsnair/Documents/GitHub/SpotifyAppCS35L/src/main.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\n\n\nexport async function redirectToAuthCodeFlow(clientId) {\n    const verifier = generateCodeVerifier(128);\n    const challenge = await generateCodeChallenge(verifier);\n\n    localStorage.setItem(\"verifier\", verifier);\n\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"response_type\", \"code\");\n    params.append(\"redirect_uri\", \"http://localhost:3000/main\");\n    params.append(\"scope\", \"user-read-currently-playing user-read-recently-played\");\n    params.append(\"code_challenge_method\", \"S256\");\n    params.append(\"code_challenge\", challenge);\n\n    document.location = `https://accounts.spotify.com/authorize?${params.toString()}`;\n}\n\nfunction generateCodeVerifier(length) {\n    let text = '';\n    let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (let i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n}\n\nasync function generateCodeChallenge(codeVerifier) {\n    const data = new TextEncoder().encode(codeVerifier);\n    const digest = await window.crypto.subtle.digest('SHA-256', data);\n    return btoa(String.fromCharCode.apply(null, [...new Uint8Array(digest)]))\n        .replace(/\\+/g, '-')\n        .replace(/\\//g, '_')\n        .replace(/=+$/, '');\n}\n\nexport async function getAccessToken(clientId, code) {\n    const verifier = localStorage.getItem(\"verifier\");\n\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"grant_type\", \"authorization_code\");\n    params.append(\"code\", code);\n    params.append(\"redirect_uri\", \"http://localhost:3000/main\");\n    params.append(\"code_verifier\", verifier);\n\n    const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n        body: params\n    });\n\n    const { access_token } = await result.json();\n    return access_token;\n}\n\nasync function fetchProfile(token) {\n    const result = await fetch(\"https://api.spotify.com/v1/me\", {\n        method: \"GET\", headers: { Authorization: `Bearer ${token}` }\n    });\n\n    return await result.json();\n}\n\n\n\nexport default async function WebApp() {\n\n    const clientID = \"4db376ff1b0941de8908d1748f1eb266\";\n    const autorizeEndpoint = \"https://accounts.spotify.com/authorize\";\n    const redirectURL = \"http://localhost:300/webapp\"\n\n\n    const params = new URLSearchParams(window.location.search);\n    const code = params.get('code');\n\n    if (!code) {\n        redirectToAuthCodeFlow(clientID);\n    } else {\n        const accessToken = await getAccessToken(clientID, code);\n        const profile = await fetchProfile(accessToken);\n        console.log(profile);\n    }\n\n    return(\n        <div>\n            <h1>Hi</h1>\n        </div>\n    );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}