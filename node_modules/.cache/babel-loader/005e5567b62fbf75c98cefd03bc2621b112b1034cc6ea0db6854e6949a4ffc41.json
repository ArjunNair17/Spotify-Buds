{"ast":null,"code":"var _jsxFileName = \"/Users/aahilali/Documents/GitHub/SpotifyAppCS35L/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport { initializeApp } from \"firebase/app\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDX1CXAtkqj9Tg1HVYwlcocpkMxB-Y4NTw\",\n  authDomain: \"spotifybuds-e7e29.firebaseapp.com\",\n  databaseURL: \"https://spotifybuds-e7e29-default-rtdb.firebaseio.com\",\n  projectId: \"spotifybuds-e7e29\",\n  storageBucket: \"spotifybuds-e7e29.appspot.com\",\n  messagingSenderId: \"566960468786\",\n  appId: \"1:566960468786:web:cb73617f63fc5f79e45d2b\",\n  measurementId: \"G-N3X3577Z70\"\n};\ninitializeApp(firebaseConfig);\nconst App = () => {\n  _s();\n  useEffect(() => {\n    fetchUserData();\n    const interval = setInterval(getLocation, 100000); // Update every 30 seconds\n    return () => clearInterval(interval); // Clean up the interval on component unmount\n  }, []);\n  const fetchUserData = () => {\n    const db = getDatabase();\n    const usersRef = ref(db, \"users\");\n    onValue(usersRef, snapshot => {\n      const userData = snapshot.val();\n      if (userData) {\n        const markers = Object.values(userData).map(user => {\n          const {\n            latitude,\n            longitude,\n            currentSong,\n            artists\n          } = user;\n          console.log(\"user: \", user);\n          return [`${user.userName}'s Location`, latitude, longitude, currentSong, artists];\n        });\n        initMap(markers);\n      }\n    });\n  };\n  const getLocation = () => {\n    fetchUserData();\n  };\n  const initMap = markers => {\n    const loadMap = () => {\n      const mapOptions = {\n        center: {\n          lat: markers[0][1],\n          lng: markers[0][2]\n        },\n        zoom: 13,\n        mapTypeId: 'roadmap'\n      };\n      const map = new window.google.maps.Map(document.getElementById(\"mapCanvas\"), mapOptions);\n      const bounds = new window.google.maps.LatLngBounds();\n      const infoWindow = new window.google.maps.InfoWindow();\n      markers.forEach(markerData => {\n        const [title, lat, lng, song, artists] = markerData;\n        console.log(\"Title:\", title);\n        const position = new window.google.maps.LatLng(lat, lng);\n        bounds.extend(position);\n        const marker = new window.google.maps.Marker({\n          position: position,\n          map: map,\n          title: title\n        });\n        console.log(\"Title:\", title);\n        window.google.maps.event.addListener(marker, 'click', () => {\n          infoWindow.setContent(`<div class=\"info_content\">\n            <h2>${title}</h2>\n            <h3>Latitude: ${lat}, Longitude: ${lng}</h3>\n            <h3>Current song: ${song}</h3>\n            <h3>Artists: ${artists[0].name}, ${artists[1].name}, ${artists[2].name}\n          </div>`);\n          infoWindow.open(map, marker);\n        });\n      });\n      map.fitBounds(bounds);\n      map.setZoom(14);\n    };\n\n    // const getLocation = () => {\n    //   fetchUserData();\n    // };\n\n    if (window.google && window.google.maps) {\n      // Google Maps API is already loaded\n      loadMap();\n    } else {\n      // Load the Google Maps API script\n      const googleMapsScript = document.createElement('script');\n      googleMapsScript.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyCGAxuT2e4fr6HcwemlAGCNJ6zsxlpUsdQ`;\n      googleMapsScript.defer = true;\n      googleMapsScript.onload = loadMap;\n      document.head.appendChild(googleMapsScript);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"spotifyBudsHeader\",\n      children: \"SpotifyBuds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"file:///Users/aahilali/Downloads/My%20project.html\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Buds around you\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mapCanvas\",\n      style: {\n        height: \"800px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","getDatabase","ref","onValue","initializeApp","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","_s","fetchUserData","interval","setInterval","getLocation","clearInterval","db","usersRef","snapshot","userData","val","markers","Object","values","map","user","latitude","longitude","currentSong","artists","console","log","userName","initMap","loadMap","mapOptions","center","lat","lng","zoom","mapTypeId","window","google","maps","Map","document","getElementById","bounds","LatLngBounds","infoWindow","InfoWindow","forEach","markerData","title","song","position","LatLng","extend","marker","Marker","event","addListener","setContent","name","open","fitBounds","setZoom","googleMapsScript","createElement","src","defer","onload","head","appendChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","alt","id","style","height","_c","$RefreshReg$"],"sources":["/Users/aahilali/Documents/GitHub/SpotifyAppCS35L/src/App.js"],"sourcesContent":["\nimport React, { useEffect } from 'react';\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport { initializeApp } from \"firebase/app\";\nimport './App.css';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDX1CXAtkqj9Tg1HVYwlcocpkMxB-Y4NTw\",\n  authDomain: \"spotifybuds-e7e29.firebaseapp.com\",\n  databaseURL: \"https://spotifybuds-e7e29-default-rtdb.firebaseio.com\",\n  projectId: \"spotifybuds-e7e29\",\n  storageBucket: \"spotifybuds-e7e29.appspot.com\",\n  messagingSenderId: \"566960468786\",\n  appId: \"1:566960468786:web:cb73617f63fc5f79e45d2b\",\n  measurementId: \"G-N3X3577Z70\"\n }; \n\ninitializeApp(firebaseConfig);\n\nconst App = () => {\n  useEffect(() => {\n    fetchUserData();\n    const interval = setInterval(getLocation, 100000); // Update every 30 seconds\n    return () => clearInterval(interval); // Clean up the interval on component unmount\n  }, []);\n\n  const fetchUserData = () => {\n    const db = getDatabase();\n    const usersRef = ref(db, \"users\");\n\n    onValue(usersRef, (snapshot) => {\n      const userData = snapshot.val();\n      if (userData) {\n        const markers = Object.values(userData).map((user) => {\n          const { latitude, longitude, currentSong, artists } = user;\n          console.log(\"user: \", user);\n          return [`${user.userName}'s Location`, latitude, longitude, currentSong, artists];\n        });\n\n        initMap(markers);\n      }\n    });\n  };\n\n  const getLocation = () => {\n    fetchUserData();\n  };\n\n  const initMap = (markers) => {\n    const loadMap = () => {\n      const mapOptions = {\n        center: { lat: markers[0][1], lng: markers[0][2] },\n        zoom: 13,\n        mapTypeId: 'roadmap'\n      };\n\n      const map = new window.google.maps.Map(document.getElementById(\"mapCanvas\"), mapOptions);\n\n      const bounds = new window.google.maps.LatLngBounds();\n\n      const infoWindow = new window.google.maps.InfoWindow();\n\n      markers.forEach((markerData) => {\n        const [title, lat, lng, song, artists] = markerData;\n        console.log(\"Title:\", title);\n        const position = new window.google.maps.LatLng(lat, lng);\n\n        bounds.extend(position);\n\n        const marker = new window.google.maps.Marker({\n          position: position,\n          map: map,\n          title: title\n        });\n        console.log(\"Title:\", title);\n\n        window.google.maps.event.addListener(marker, 'click', () => {\n          infoWindow.setContent(`<div class=\"info_content\">\n            <h2>${title}</h2>\n            <h3>Latitude: ${lat}, Longitude: ${lng}</h3>\n            <h3>Current song: ${song}</h3>\n            <h3>Artists: ${artists[0].name}, ${artists[1].name}, ${artists[2].name}\n          </div>`);\n          infoWindow.open(map, marker);\n        });\n      });\n\n      map.fitBounds(bounds);\n      map.setZoom(14);\n    };\n\n    // const getLocation = () => {\n    //   fetchUserData();\n    // };\n\n    if (window.google && window.google.maps) {\n      // Google Maps API is already loaded\n      loadMap();\n    } else {\n      // Load the Google Maps API script\n      const googleMapsScript = document.createElement('script');\n      googleMapsScript.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyCGAxuT2e4fr6HcwemlAGCNJ6zsxlpUsdQ`;\n      googleMapsScript.defer = true;\n      googleMapsScript.onload = loadMap;\n      document.head.appendChild(googleMapsScript);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n  <h1 className=\"spotifyBudsHeader\">SpotifyBuds</h1>\n  <div>\n            <img src=\"file:///Users/aahilali/Downloads/My%20project.html\" alt=\"\"/>\n        </div>\n  <h2>Buds around you</h2>\n  <div id=\"mapCanvas\" style={{ height: \"800px\" }}></div>\n</div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}