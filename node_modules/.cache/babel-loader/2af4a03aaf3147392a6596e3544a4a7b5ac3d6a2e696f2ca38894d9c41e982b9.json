{"ast":null,"code":"/* global define */\n(function (root, factory) {\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.compareVersions = factory();\n  }\n})(this, function () {\n  var semver = /^v?(?:\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+))?(?:-[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?(?:\\+[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?)?)?$/i;\n  function indexOrEnd(str, q) {\n    return str.indexOf(q) === -1 ? str.length : str.indexOf(q);\n  }\n  function split(v) {\n    var c = v.replace(/^v/, '').replace(/\\+.*$/, '');\n    var patchIndex = indexOrEnd(c, '-');\n    var arr = c.substring(0, patchIndex).split('.');\n    arr.push(c.substring(patchIndex + 1));\n    return arr;\n  }\n  function tryParse(v) {\n    return isNaN(Number(v)) ? v : Number(v);\n  }\n  function validate(version) {\n    if (typeof version !== 'string') {\n      throw new TypeError('Invalid argument expected string');\n    }\n    if (!semver.test(version)) {\n      throw new Error('Invalid argument not valid semver (\\'' + version + '\\' received)');\n    }\n  }\n  function compareVersions(v1, v2) {\n    [v1, v2].forEach(validate);\n    var s1 = split(v1);\n    var s2 = split(v2);\n    for (var i = 0; i < Math.max(s1.length - 1, s2.length - 1); i++) {\n      var n1 = parseInt(s1[i] || 0, 10);\n      var n2 = parseInt(s2[i] || 0, 10);\n      if (n1 > n2) return 1;\n      if (n2 > n1) return -1;\n    }\n    var sp1 = s1[s1.length - 1];\n    var sp2 = s2[s2.length - 1];\n    if (sp1 && sp2) {\n      var p1 = sp1.split('.').map(tryParse);\n      var p2 = sp2.split('.').map(tryParse);\n      for (i = 0; i < Math.max(p1.length, p2.length); i++) {\n        if (p1[i] === undefined || typeof p2[i] === 'string' && typeof p1[i] === 'number') return -1;\n        if (p2[i] === undefined || typeof p1[i] === 'string' && typeof p2[i] === 'number') return 1;\n        if (p1[i] > p2[i]) return 1;\n        if (p2[i] > p1[i]) return -1;\n      }\n    } else if (sp1 || sp2) {\n      return sp1 ? -1 : 1;\n    }\n    return 0;\n  }\n  ;\n  var allowedOperators = ['>', '>=', '=', '<', '<='];\n  var operatorResMap = {\n    '>': [1],\n    '>=': [0, 1],\n    '=': [0],\n    '<=': [-1, 0],\n    '<': [-1]\n  };\n  function validateOperator(op) {\n    if (typeof op !== 'string') {\n      throw new TypeError('Invalid operator type, expected string but got ' + typeof op);\n    }\n    if (allowedOperators.indexOf(op) === -1) {\n      throw new TypeError('Invalid operator, expected one of ' + allowedOperators.join('|'));\n    }\n  }\n  compareVersions.validate = function (version) {\n    return typeof version === 'string' && semver.test(version);\n  };\n  compareVersions.compare = function (v1, v2, operator) {\n    // Validate operator\n    validateOperator(operator);\n\n    // since result of compareVersions can only be -1 or 0 or 1\n    // a simple map can be used to replace switch\n    var res = compareVersions(v1, v2);\n    return operatorResMap[operator].indexOf(res) > -1;\n  };\n  return compareVersions;\n});","map":{"version":3,"names":["root","factory","define","amd","exports","module","compareVersions","semver","indexOrEnd","str","q","indexOf","length","split","v","c","replace","patchIndex","arr","substring","push","tryParse","isNaN","Number","validate","version","TypeError","test","Error","v1","v2","forEach","s1","s2","i","Math","max","n1","parseInt","n2","sp1","sp2","p1","map","p2","undefined","allowedOperators","operatorResMap","validateOperator","op","join","compare","operator","res"],"sources":["/Users/arjunsnair/Documents/GitHub/SpotifyAppCS35L/node_modules/compare-versions/index.js"],"sourcesContent":["/* global define */\n(function (root, factory) {\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.compareVersions = factory();\n  }\n}(this, function () {\n\n  var semver = /^v?(?:\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+))?(?:-[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?(?:\\+[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?)?)?$/i;\n\n  function indexOrEnd(str, q) {\n    return str.indexOf(q) === -1 ? str.length : str.indexOf(q);\n  }\n\n  function split(v) {\n    var c = v.replace(/^v/, '').replace(/\\+.*$/, '');\n    var patchIndex = indexOrEnd(c, '-');\n    var arr = c.substring(0, patchIndex).split('.');\n    arr.push(c.substring(patchIndex + 1));\n    return arr;\n  }\n\n  function tryParse(v) {\n    return isNaN(Number(v)) ? v : Number(v);\n  }\n\n  function validate(version) {\n    if (typeof version !== 'string') {\n      throw new TypeError('Invalid argument expected string');\n    }\n    if (!semver.test(version)) {\n      throw new Error('Invalid argument not valid semver (\\''+version+'\\' received)');\n    }\n  }\n\n  function compareVersions(v1, v2) {\n    [v1, v2].forEach(validate);\n\n    var s1 = split(v1);\n    var s2 = split(v2);\n\n    for (var i = 0; i < Math.max(s1.length - 1, s2.length - 1); i++) {\n      var n1 = parseInt(s1[i] || 0, 10);\n      var n2 = parseInt(s2[i] || 0, 10);\n\n      if (n1 > n2) return 1;\n      if (n2 > n1) return -1;\n    }\n\n    var sp1 = s1[s1.length - 1];\n    var sp2 = s2[s2.length - 1];\n\n    if (sp1 && sp2) {\n      var p1 = sp1.split('.').map(tryParse);\n      var p2 = sp2.split('.').map(tryParse);\n\n      for (i = 0; i < Math.max(p1.length, p2.length); i++) {\n        if (p1[i] === undefined || typeof p2[i] === 'string' && typeof p1[i] === 'number') return -1;\n        if (p2[i] === undefined || typeof p1[i] === 'string' && typeof p2[i] === 'number') return 1;\n\n        if (p1[i] > p2[i]) return 1;\n        if (p2[i] > p1[i]) return -1;\n      }\n    } else if (sp1 || sp2) {\n      return sp1 ? -1 : 1;\n    }\n\n    return 0;\n  };\n\n  var allowedOperators = [\n    '>',\n    '>=',\n    '=',\n    '<',\n    '<='\n  ];\n\n  var operatorResMap = {\n    '>': [1],\n    '>=': [0, 1],\n    '=': [0],\n    '<=': [-1, 0],\n    '<': [-1]\n  };\n\n  function validateOperator(op) {\n    if (typeof op !== 'string') {\n      throw new TypeError('Invalid operator type, expected string but got ' + typeof op);\n    }\n    if (allowedOperators.indexOf(op) === -1) {\n      throw new TypeError('Invalid operator, expected one of ' + allowedOperators.join('|'));\n    }\n  }\n\n  compareVersions.validate = function(version) {\n    return typeof version === 'string' && semver.test(version);\n  }\n\n  compareVersions.compare = function (v1, v2, operator) {\n    // Validate operator\n    validateOperator(operator);\n\n    // since result of compareVersions can only be -1 or 0 or 1\n    // a simple map can be used to replace switch\n    var res = compareVersions(v1, v2);\n    return operatorResMap[operator].indexOf(res) > -1;\n  }\n\n  return compareVersions;\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}