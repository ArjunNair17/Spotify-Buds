{"ast":null,"code":"var _jsxFileName = \"/Users/arjunsnair/Documents/GitHub/SpotifyAppCS35L/src/bruh.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientID = \"4db376ff1b0941de8908d1748f1eb266\";\nconst redirectURL = \"http://localhost:3000/main\";\nconst MainComponent = () => {\n  _s();\n  const [name, setName] = useState(\"No Currently Playing\");\n  const [token, setToken] = useState(\"\");\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const code = params.get('code');\n    const handleAuthentication = async () => {\n      if (!code) {\n        redirectToAuthCodeFlow(clientID);\n      } else {\n        const accessToken = await getAccessToken(clientID, code);\n        const profile = await fetchProfile(accessToken);\n        setToken(accessToken);\n        console.log(accessToken);\n        if (profile.item != undefined) {\n          console.log(profile.item.name);\n          setName(profile.item.name);\n        }\n      }\n    };\n    handleAuthentication();\n  }, []);\n  const params = new URLSearchParams(window.location.search);\n  const code = params.get('code');\n  const refresh = async () => {\n    console.log(token);\n    axios.get(\"https://api.spotify.com/v1/me/player/currently-playing\", {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    }).then(response => {\n      console.log(token);\n      //setName(response.item.name);\n    }).catch(error => {\n      alert(error.message);\n    });\n  };\n  async function redirectToAuthCodeFlow(clientId) {\n    const verifier = generateCodeVerifier(128);\n    const challenge = await generateCodeChallenge(verifier);\n    localStorage.setItem(\"verifier\", verifier);\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"response_type\", \"code\");\n    params.append(\"redirect_uri\", redirectURL);\n    params.append(\"scope\", \"user-read-currently-playing user-read-recently-played\");\n    params.append(\"show_dialog\", \"true\");\n    params.append(\"code_challenge_method\", \"S256\");\n    params.append(\"code_challenge\", challenge);\n    document.location = `https://accounts.spotify.com/authorize?${params.toString()}`;\n  }\n  function generateCodeVerifier(length) {\n    let text = '';\n    let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n  async function generateCodeChallenge(codeVerifier) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(codeVerifier);\n    const digest = await window.crypto.subtle.digest('SHA-256', data);\n    return btoa(String.fromCharCode(...new Uint8Array(digest))).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n  }\n  async function getAccessToken(clientId, code) {\n    const verifier = localStorage.getItem(\"verifier\");\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"grant_type\", \"authorization_code\");\n    params.append(\"code\", code);\n    params.append(\"redirect_uri\", redirectURL);\n    params.append(\"code_verifier\", verifier);\n    const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: params\n    });\n    const {\n      access_token\n    } = await result.json();\n    console.log(typeof access_token);\n    return access_token;\n  }\n  async function fetchProfile(token) {\n    const result = await fetch(\"https://api.spotify.com/v1/me/player/currently-playing\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return await result.json();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => refresh(),\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(MainComponent, \"j+F5h8TdOIyZncm1FDNJejXpbS8=\");\n_c = MainComponent;\nexport default MainComponent;\nvar _c;\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"names":["axios","React","useEffect","useState","jsxDEV","_jsxDEV","clientID","redirectURL","MainComponent","_s","name","setName","token","setToken","params","URLSearchParams","window","location","search","code","get","handleAuthentication","redirectToAuthCodeFlow","accessToken","getAccessToken","profile","fetchProfile","console","log","item","undefined","refresh","headers","Authorization","then","response","catch","error","alert","message","clientId","verifier","generateCodeVerifier","challenge","generateCodeChallenge","localStorage","setItem","append","document","toString","length","text","possible","i","charAt","Math","floor","random","codeVerifier","encoder","TextEncoder","data","encode","digest","crypto","subtle","btoa","String","fromCharCode","Uint8Array","replace","getItem","result","fetch","method","body","access_token","json","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/arjunsnair/Documents/GitHub/SpotifyAppCS35L/src/bruh.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n\nconst clientID = \"4db376ff1b0941de8908d1748f1eb266\";\nconst redirectURL = \"http://localhost:3000/main\";\n\n\nconst MainComponent = () => {\n  const [name, setName] = useState(\"No Currently Playing\");\n  const [token, setToken] = useState(\"\");\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const code = params.get('code');\n\n    const handleAuthentication = async () => {\n      if (!code) {\n        redirectToAuthCodeFlow(clientID);\n      } else {\n        const accessToken = await getAccessToken(clientID, code);\n        const profile = await fetchProfile(accessToken);\n        setToken(accessToken);\n        console.log(accessToken)\n        if(profile.item != undefined) {\n            console.log(profile.item.name)\n            setName(profile.item.name);\n        }\n      }\n    };\n\n    handleAuthentication();\n  }, []);\n  const params = new URLSearchParams(window.location.search);\n    const code = params.get('code')\n  const refresh = async () => {\n        console.log(token);\n        axios.get(\"https://api.spotify.com/v1/me/player/currently-playing\", {\n            headers: {\n                Authorization: \"Bearer \" + token,\n            },\n\n        })\n        .then((response) => {\n            console.log(token);\n            //setName(response.item.name);\n        })\n        .catch((error) => {\n            alert(error.message);\n        });\n  }\n\n  async function redirectToAuthCodeFlow(clientId) {\n    const verifier = generateCodeVerifier(128);\n    const challenge = await generateCodeChallenge(verifier);\n\n    localStorage.setItem(\"verifier\", verifier);\n\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"response_type\", \"code\");\n    params.append(\"redirect_uri\", redirectURL);\n    params.append(\"scope\", \"user-read-currently-playing user-read-recently-played\");\n    params.append(\"show_dialog\", \"true\");\n    params.append(\"code_challenge_method\", \"S256\");\n    params.append(\"code_challenge\", challenge);\n\n\n    document.location = `https://accounts.spotify.com/authorize?${params.toString()}`;\n  }\n\n  function generateCodeVerifier(length) {\n    let text = '';\n    let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n\n  async function generateCodeChallenge(codeVerifier) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(codeVerifier);\n    const digest = await window.crypto.subtle.digest('SHA-256', data);\n    return btoa(String.fromCharCode(...new Uint8Array(digest)))\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .replace(/=+$/, '');\n  }\n\n  async function getAccessToken(clientId, code) {\n    const verifier = localStorage.getItem(\"verifier\");\n\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"grant_type\", \"authorization_code\");\n    params.append(\"code\", code);\n    params.append(\"redirect_uri\", redirectURL);\n    params.append(\"code_verifier\", verifier);\n\n    const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: params\n    });\n\n    const { access_token } = await result.json();\n    console.log(typeof(access_token));\n    return access_token;\n  }\n\n  async function fetchProfile(token) {\n    const result = await fetch(\"https://api.spotify.com/v1/me/player/currently-playing\", {\n      method: \"GET\",\n      headers: { Authorization: `Bearer ${token}` }\n    });\n\n    return await result.json();\n  }\n\n  return (\n    <div>\n      <h1>{name}</h1>\n      <button onClick={() => refresh()}>Refresh</button>\n    </div>\n  );\n};\n\nexport default MainComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}