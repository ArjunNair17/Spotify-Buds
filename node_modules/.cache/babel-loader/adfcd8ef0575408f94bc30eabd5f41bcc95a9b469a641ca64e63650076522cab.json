{"ast":null,"code":"var _jsxFileName = \"/Users/aahilali/Documents/GitHub/SpotifyAppCS35L/src/App.js\";\n// import React from 'react';\n// import { initializeApp } from 'firebase/app';\n// import { getFirestore } from 'firebase/firestore';\n// import './App.css';\n\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyDX1CXAtkqj9Tg1HVYwlcocpkMxB-Y4NTw\",\n//   authDomain: \"spotifybuds-e7e29.firebaseapp.com\",\n//   databaseURL: \"https://spotifybuds-e7e29-default-rtdb.firebaseio.com\",\n//   projectId: \"spotifybuds-e7e29\",\n//   storageBucket: \"spotifybuds-e7e29.appspot.com\",\n//   messagingSenderId: \"566960468786\",\n//   appId: \"1:566960468786:web:cb73617f63fc5f79e45d2b\",\n//   measurementId: \"G-N3X3577Z70\"\n// };\n\n// const app = initializeApp(firebaseConfig);\n// const db = getFirestore(app);\n\n// class App extends React.Component {\n\n//  constructor(props) {\n//    super(props);\n//    this.state = {\n//      latitude: null,\n//      longitude: null,\n//      userAddress: null\n//    };\n//    this.getLocation = this.getLocation.bind(this);\n//    this.getCoordinates = this.getCoordinates.bind(this); // Fix the binding here\n//    this.getUserAddress = this.getUserAddress.bind(this);\n//    this.handleInsertData = this.handleInsertData.bind(this);\n//  }\n\n//  componentDidMount() {\n//    this.getLocation();\n//    this.interval = setInterval(this.getLocation, 1000); // Update every 1 seconds\n//  }\n\n//  componentWillUnmount() {\n//    clearInterval(this.interval); // Clear the interval when the component is unmounted\n//  }\n\n//  getLocation() {\n//    if (navigator.geolocation) {\n//      navigator.geolocation.getCurrentPosition(this.getCoordinates, this.handleLocationError);\n//    } else {\n//      alert(\"Geolocation is not supported by this browser.\");\n//    }\n//  }\n\n//  getCoordinates(position) {\n//  this.setState(\n//    {\n//      latitude: position.coords.latitude,\n//      longitude: position.coords.longitude\n//    },\n//    this.getUserAddress\n//  );\n// }\n\n// getUserAddress() {\n//  const { latitude, longitude } = this.state;\n//  fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=AIzaSyBxDQfDy1nwLkmwaJUfQtNNqXla3kZr-ug`)\n//    .then(response => response.json())\n//    .then(data => {\n//      const address = data.results[0].formatted_address;\n//      this.setState({ userAddress: address });\n//    })\n//    .catch(error => alert(error));\n// }\n\n//  handleLocationError(error){\n//    switch(error.code) {\n//      case error.PERMISSION_DENIED:\n//        alert(\"User denied the request for Geolocation.\")\n//        break;\n//      case error.POSITION_UNAVAILABLE:\n//        alert(\"Location information is unavailable.\")\n//        break;\n//      case error.TIMEOUT:\n//        alert(\"The request to get user location timed out.\")\n//        break;\n//      case error.UNKNOWN_ERROR:\n//        alert(\"An unknown error occurred.\")\n//        break;\n//      default:\n//        alert(\"An unknown error occurred.\")\n//    }\n//  }\n\n// //  getAllInputs(){\n// //     return{\n// //       latitude: this.state.latitude,\n// //       longitude: this.state.longitude,\n// //       userAddress: this.state.userAddress\n// //     }\n// //  }\n\n//  handleInsertData() {\n// //   const db = this.state.db;\n// //   const data = this.getAllInputs();\n\n// //   this.setState(ref(db, 'User'),\n// //   {\n// //     Latitude: data.latitude,\n// //     Longitude: data.longitude,\n// //     Address: data.address\n// //   });\n// //  }\n//   const { latitude, longitude, userAddress } = this.state;\n\n//   if (!latitude || !longitude || !userAddress) {\n//     alert('Missing location data');\n//     return;\n//   }\n\n//   const data = {\n//     latitude: Number(latitude),\n//     longitude: Number(longitude),\n//     address: userAddress,\n//   };\n\n//   db.collection('locations')\n//     .add(data)\n//     .then(() => {\n//       alert('Data was added successfully');\n//     })\n//     .catch((error) => {\n//       alert('There was an error, details: ' + error);\n//     });\n// }\n\n//  render() {\n//    return (\n//      <div className=\"App\">\n//        <h2>\n//          Geolocation Finder for SpotifyBuds\n//        </h2>\n//        <button onClick={this.getLocation}>Get coordinates</button>\n//        <h4>Your Coordinates</h4>\n//        <p>Latitude: {this.state.latitude}</p>\n//        <p>Longitude: {this.state.longitude}</p>\n//        <h4>Finding people around your area</h4>\n//        <p>Address: {this.state.userAddress}</p>\n//        {\n//          this.state.latitude && this.state.longitude &&\n//          <img src={`https://maps.googleapis.com/maps/api/staticmap?center=${this.state.latitude},${this.state.longitude}&zoom=13&size=600x300&maptype=roadmap&markers=color:blue%7Clabel:S%7C40.702147,-74.015794&markers=color:green%7Clabel:G%7C40.711614,-74.012318&markers=color:red%7C${this.state.latitude},${this.state.longitude}&key=AIzaSyBxDQfDy1nwLkmwaJUfQtNNqXla3kZr-ug`} alt=''/>\n//        }\n//      </div>\n//    )\n//  }\n// }\n// export default App;\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userDatabase = [{\n  name: \"User1\",\n  lat: 34.0726361,\n  lon: -118.4536259\n}, {\n  name: \"User2\",\n  lat: 34.0726362,\n  lon: -118.4536260\n}, {\n  name: \"User3\",\n  lat: 34.0726360,\n  lon: -118.4536265\n}, {\n  name: \"User4\",\n  lat: 34.0726362,\n  lon: -118.4536169\n}, {\n  name: \"User5\",\n  lat: 34.072640,\n  lon: -118.4536269\n}];\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latitude: null,\n      longitude: null,\n      userAddress: null,\n      closestUsers: [],\n      radius: 5 // Default radius of 5 feet\n    };\n\n    this.getLocation = this.getLocation.bind(this);\n    this.getCoordinates = this.getCoordinates.bind(this);\n    this.getUserAddress = this.getUserAddress.bind(this);\n    this.handleRadiusChange = this.handleRadiusChange.bind(this);\n  }\n  componentDidMount() {\n    this.getLocation();\n    this.interval = setInterval(this.getLocation, 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.getCoordinates, this.handleLocationError);\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n  }\n  getCoordinates(position) {\n    this.setState({\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude\n    }, this.getUserAddress);\n  }\n  getUserAddress() {\n    const {\n      latitude,\n      longitude,\n      radius\n    } = this.state;\n    fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=AIzaSyBxDQfDy1nwLkmwaJUfQtNNqXla3kZr-ug`).then(response => response.json()).then(data => {\n      const address = data.results[0].formatted_address;\n      this.setState({\n        userAddress: address\n      });\n      const closestUsers = this.findClosestUsers(latitude, longitude, userDatabase, radius);\n      this.setState({\n        closestUsers: closestUsers\n      });\n    }).catch(error => alert(error));\n  }\n  handleLocationError(error) {\n    switch (error.code) {\n      case error.PERMISSION_DENIED:\n        alert(\"User denied the request for Geolocation.\");\n        break;\n      case error.POSITION_UNAVAILABLE:\n        alert(\"Location information is unavailable.\");\n        break;\n      case error.TIMEOUT:\n        alert(\"The request to get user location timed out.\");\n        break;\n      case error.UNKNOWN_ERROR:\n        alert(\"An unknown error occurred.\");\n        break;\n      default:\n        alert(\"An unknown error occurred.\");\n    }\n  }\n  calculateDistance(lat1, lon1, lat2, lon2) {\n    const earthRadiusInFeet = 20903520; // Approximate Earth radius in feet\n    const dLat = this.toRadians(lat2 - lat1);\n    const dLon = this.toRadians(lon2 - lon1);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(this.toRadians(lat1)) * Math.cos(this.toRadians(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distanceInFeet = earthRadiusInFeet * c;\n    const roundedDistance = distanceInFeet.toFixed(2); // Round to two decimal places\n    return roundedDistance;\n  }\n  toRadians(degrees) {\n    return degrees * (Math.PI / 180);\n  }\n  findClosestUsers(userLat, userLon, database, radius) {\n    const distances = [];\n    for (const person of database) {\n      const distance = this.calculateDistance(userLat, userLon, person.lat, person.lon);\n      if (distance <= radius) {\n        distances.push({\n          user: person.name,\n          distance: distance\n        });\n      }\n    }\n    distances.sort((a, b) => a.distance - b.distance);\n    return distances;\n  }\n  handleRadiusChange(event) {\n    const radius = parseInt(event.target.value, 10);\n    this.setState({\n      radius\n    }, this.getUserAddress);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Geolocation Finder for SpotifyBuds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.getLocation,\n        children: \"Get coordinates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Your Coordinates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Latitude: \", this.state.latitude]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Longitude: \", this.state.longitude]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Finding people around your area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Address: \", this.state.userAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), this.state.latitude && this.state.longitude && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://maps.googleapis.com/maps/api/staticmap?center=${this.state.latitude},${this.state.longitude}&zoom=13&size=600x300&maptype=roadmap&markers=color:blue%7Clabel:S%7C40.702147,-74.015794&markers=color:green%7Clabel:G%7C40.711614,-74.012318&markers=color:red%7C${this.state.latitude},${this.state.longitude}&key=AIzaSyBxDQfDy1nwLkmwaJUfQtNNqXla3kZr-ug`,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Closest Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), this.state.closestUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.closestUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [user.user, \" - \", user.distance, \" feet\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"radius\",\n        children: \"Select radius in feet:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"radius\",\n        value: this.state.radius,\n        onChange: this.handleRadiusChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"5\",\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"10\",\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"25\",\n          children: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"50\",\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"100\",\n          children: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","userDatabase","name","lat","lon","App","Component","constructor","props","state","latitude","longitude","userAddress","closestUsers","radius","getLocation","bind","getCoordinates","getUserAddress","handleRadiusChange","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","navigator","geolocation","getCurrentPosition","handleLocationError","alert","position","setState","coords","fetch","then","response","json","data","address","results","formatted_address","findClosestUsers","catch","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","calculateDistance","lat1","lon1","lat2","lon2","earthRadiusInFeet","dLat","toRadians","dLon","a","Math","sin","cos","c","atan2","sqrt","distanceInFeet","roundedDistance","toFixed","degrees","PI","userLat","userLon","database","distances","person","distance","push","user","sort","b","event","parseInt","target","value","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","length","map","index","htmlFor","id","onChange"],"sources":["/Users/aahilali/Documents/GitHub/SpotifyAppCS35L/src/App.js"],"sourcesContent":["// import React from 'react';\n// import { initializeApp } from 'firebase/app';\n// import { getFirestore } from 'firebase/firestore';\n// import './App.css';\n\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyDX1CXAtkqj9Tg1HVYwlcocpkMxB-Y4NTw\",\n//   authDomain: \"spotifybuds-e7e29.firebaseapp.com\",\n//   databaseURL: \"https://spotifybuds-e7e29-default-rtdb.firebaseio.com\",\n//   projectId: \"spotifybuds-e7e29\",\n//   storageBucket: \"spotifybuds-e7e29.appspot.com\",\n//   messagingSenderId: \"566960468786\",\n//   appId: \"1:566960468786:web:cb73617f63fc5f79e45d2b\",\n//   measurementId: \"G-N3X3577Z70\"\n// };\n\n// const app = initializeApp(firebaseConfig);\n// const db = getFirestore(app);\n\n// class App extends React.Component {\n\n//  constructor(props) {\n//    super(props);\n//    this.state = {\n//      latitude: null,\n//      longitude: null,\n//      userAddress: null\n//    };\n//    this.getLocation = this.getLocation.bind(this);\n//    this.getCoordinates = this.getCoordinates.bind(this); // Fix the binding here\n//    this.getUserAddress = this.getUserAddress.bind(this);\n//    this.handleInsertData = this.handleInsertData.bind(this);\n//  }\n\n//  componentDidMount() {\n//    this.getLocation();\n//    this.interval = setInterval(this.getLocation, 1000); // Update every 1 seconds\n//  }\n\n//  componentWillUnmount() {\n//    clearInterval(this.interval); // Clear the interval when the component is unmounted\n//  }\n\n\n//  getLocation() {\n//    if (navigator.geolocation) {\n//      navigator.geolocation.getCurrentPosition(this.getCoordinates, this.handleLocationError);\n//    } else {\n//      alert(\"Geolocation is not supported by this browser.\");\n//    }\n//  }\n\n\n//  getCoordinates(position) {\n//  this.setState(\n//    {\n//      latitude: position.coords.latitude,\n//      longitude: position.coords.longitude\n//    },\n//    this.getUserAddress\n//  );\n// }\n\n\n// getUserAddress() {\n//  const { latitude, longitude } = this.state;\n//  fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=AIzaSyBxDQfDy1nwLkmwaJUfQtNNqXla3kZr-ug`)\n//    .then(response => response.json())\n//    .then(data => {\n//      const address = data.results[0].formatted_address;\n//      this.setState({ userAddress: address });\n//    })\n//    .catch(error => alert(error));\n// }\n\n\n//  handleLocationError(error){\n//    switch(error.code) {\n//      case error.PERMISSION_DENIED:\n//        alert(\"User denied the request for Geolocation.\")\n//        break;\n//      case error.POSITION_UNAVAILABLE:\n//        alert(\"Location information is unavailable.\")\n//        break;\n//      case error.TIMEOUT:\n//        alert(\"The request to get user location timed out.\")\n//        break;\n//      case error.UNKNOWN_ERROR:\n//        alert(\"An unknown error occurred.\")\n//        break;\n//      default:\n//        alert(\"An unknown error occurred.\")\n//    }\n//  }\n\n// //  getAllInputs(){\n// //     return{\n// //       latitude: this.state.latitude,\n// //       longitude: this.state.longitude,\n// //       userAddress: this.state.userAddress\n// //     }\n// //  }\n\n//  handleInsertData() {\n// //   const db = this.state.db;\n// //   const data = this.getAllInputs();\n\n// //   this.setState(ref(db, 'User'),\n// //   {\n// //     Latitude: data.latitude,\n// //     Longitude: data.longitude,\n// //     Address: data.address\n// //   });\n// //  }\n//   const { latitude, longitude, userAddress } = this.state;\n\n//   if (!latitude || !longitude || !userAddress) {\n//     alert('Missing location data');\n//     return;\n//   }\n\n//   const data = {\n//     latitude: Number(latitude),\n//     longitude: Number(longitude),\n//     address: userAddress,\n//   };\n\n//   db.collection('locations')\n//     .add(data)\n//     .then(() => {\n//       alert('Data was added successfully');\n//     })\n//     .catch((error) => {\n//       alert('There was an error, details: ' + error);\n//     });\n// }\n\n//  render() {\n//    return (\n//      <div className=\"App\">\n//        <h2>\n//          Geolocation Finder for SpotifyBuds\n//        </h2>\n//        <button onClick={this.getLocation}>Get coordinates</button>\n//        <h4>Your Coordinates</h4>\n//        <p>Latitude: {this.state.latitude}</p>\n//        <p>Longitude: {this.state.longitude}</p>\n//        <h4>Finding people around your area</h4>\n//        <p>Address: {this.state.userAddress}</p>\n//        {\n//          this.state.latitude && this.state.longitude &&\n//          <img src={`https://maps.googleapis.com/maps/api/staticmap?center=${this.state.latitude},${this.state.longitude}&zoom=13&size=600x300&maptype=roadmap&markers=color:blue%7Clabel:S%7C40.702147,-74.015794&markers=color:green%7Clabel:G%7C40.711614,-74.012318&markers=color:red%7C${this.state.latitude},${this.state.longitude}&key=AIzaSyBxDQfDy1nwLkmwaJUfQtNNqXla3kZr-ug`} alt=''/>\n//        }\n//      </div>\n//    )\n//  }\n// }\n// export default App;\nimport React from 'react';\nimport './App.css';\n\nconst userDatabase = [\n  { name: \"User1\", lat: 34.0726361, lon: -118.4536259 },\n  { name: \"User2\", lat: 34.0726362, lon: -118.4536260 },\n  { name: \"User3\", lat: 34.0726360, lon: -118.4536265 },\n  { name: \"User4\", lat: 34.0726362, lon: -118.4536169 },\n  { name: \"User5\", lat: 34.072640, lon: -118.4536269 }\n];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latitude: null,\n      longitude: null,\n      userAddress: null,\n      closestUsers: [],\n      radius: 5 // Default radius of 5 feet\n    };\n    this.getLocation = this.getLocation.bind(this);\n    this.getCoordinates = this.getCoordinates.bind(this);\n    this.getUserAddress = this.getUserAddress.bind(this);\n    this.handleRadiusChange = this.handleRadiusChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getLocation();\n    this.interval = setInterval(this.getLocation, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.getCoordinates, this.handleLocationError);\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n  }\n\n  getCoordinates(position) {\n    this.setState(\n      {\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      },\n      this.getUserAddress\n    );\n  }\n\n  getUserAddress() {\n    const { latitude, longitude, radius } = this.state;\n    fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=AIzaSyBxDQfDy1nwLkmwaJUfQtNNqXla3kZr-ug`)\n      .then(response => response.json())\n      .then(data => {\n        const address = data.results[0].formatted_address;\n        this.setState({ userAddress: address });\n\n        const closestUsers = this.findClosestUsers(latitude, longitude, userDatabase, radius);\n        this.setState({ closestUsers: closestUsers });\n      })\n      .catch(error => alert(error));\n  }\n\n  handleLocationError(error) {\n    switch (error.code) {\n      case error.PERMISSION_DENIED:\n        alert(\"User denied the request for Geolocation.\");\n        break;\n      case error.POSITION_UNAVAILABLE:\n        alert(\"Location information is unavailable.\");\n        break;\n      case error.TIMEOUT:\n        alert(\"The request to get user location timed out.\");\n        break;\n      case error.UNKNOWN_ERROR:\n        alert(\"An unknown error occurred.\");\n        break;\n      default:\n        alert(\"An unknown error occurred.\");\n    }\n  }\n\n  calculateDistance(lat1, lon1, lat2, lon2) {\n    const earthRadiusInFeet = 20903520; // Approximate Earth radius in feet\n    const dLat = this.toRadians(lat2 - lat1);\n    const dLon = this.toRadians(lon2 - lon1);\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(this.toRadians(lat1)) * Math.cos(this.toRadians(lat2)) *\n      Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distanceInFeet = earthRadiusInFeet * c;\n    const roundedDistance = distanceInFeet.toFixed(2); // Round to two decimal places\n    return roundedDistance;\n  }\n\n  toRadians(degrees) {\n    return degrees * (Math.PI / 180);\n  }\n\n  findClosestUsers(userLat, userLon, database, radius) {\n    const distances = [];\n\n    for (const person of database) {\n      const distance = this.calculateDistance(userLat, userLon, person.lat, person.lon);\n      if (distance <= radius) {\n        distances.push({ user: person.name, distance: distance });\n      }\n    }\n\n    distances.sort((a, b) => a.distance - b.distance);\n\n    return distances;\n  }\n\n  handleRadiusChange(event) {\n    const radius = parseInt(event.target.value, 10);\n    this.setState({ radius }, this.getUserAddress);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h2>Geolocation Finder for SpotifyBuds</h2>\n        <button onClick={this.getLocation}>Get coordinates</button>\n        <h4>Your Coordinates</h4>\n        <p>Latitude: {this.state.latitude}</p>\n        <p>Longitude: {this.state.longitude}</p>\n        <h4>Finding people around your area</h4>\n        <p>Address: {this.state.userAddress}</p>\n        {\n          this.state.latitude && this.state.longitude &&\n          <img src={`https://maps.googleapis.com/maps/api/staticmap?center=${this.state.latitude},${this.state.longitude}&zoom=13&size=600x300&maptype=roadmap&markers=color:blue%7Clabel:S%7C40.702147,-74.015794&markers=color:green%7Clabel:G%7C40.711614,-74.012318&markers=color:red%7C${this.state.latitude},${this.state.longitude}&key=AIzaSyBxDQfDy1nwLkmwaJUfQtNNqXla3kZr-ug`} alt=''/>\n        }\n        <h4>Closest Users</h4>\n        {this.state.closestUsers.length > 0 && (\n          <ul>\n            {this.state.closestUsers.map((user, index) => (\n              <li key={index}>{user.user} - {user.distance} feet</li>\n            ))}\n          </ul>\n        )}\n\n        <label htmlFor=\"radius\">Select radius in feet:</label>\n        <select id=\"radius\" value={this.state.radius} onChange={this.handleRadiusChange}>\n          <option value=\"5\">5</option>\n          <option value=\"10\">10</option>\n          <option value=\"25\">25</option>\n          <option value=\"50\">50</option>\n          <option value=\"100\">100</option>\n        </select>\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,YAAY,GAAG,CACnB;EAAEC,IAAI,EAAE,OAAO;EAAEC,GAAG,EAAE,UAAU;EAAEC,GAAG,EAAE,CAAC;AAAY,CAAC,EACrD;EAAEF,IAAI,EAAE,OAAO;EAAEC,GAAG,EAAE,UAAU;EAAEC,GAAG,EAAE,CAAC;AAAY,CAAC,EACrD;EAAEF,IAAI,EAAE,OAAO;EAAEC,GAAG,EAAE,UAAU;EAAEC,GAAG,EAAE,CAAC;AAAY,CAAC,EACrD;EAAEF,IAAI,EAAE,OAAO;EAAEC,GAAG,EAAE,UAAU;EAAEC,GAAG,EAAE,CAAC;AAAY,CAAC,EACrD;EAAEF,IAAI,EAAE,OAAO;EAAEC,GAAG,EAAE,SAAS;EAAEC,GAAG,EAAE,CAAC;AAAY,CAAC,CACrD;AAED,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}