{"ast":null,"code":"var _jsxFileName = \"/Users/aahilali/Documents/GitHub/SpotifyAppCS35L/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect } from 'react';\n// import { getDatabase, ref, onValue } from \"firebase/database\";\n// import { initializeApp } from \"firebase/app\";\n// import './App.css';\n\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyDX1CXAtkqj9Tg1HVYwlcocpkMxB-Y4NTw\",\n//   authDomain: \"spotifybuds-e7e29.firebaseapp.com\",\n//   databaseURL: \"https://spotifybuds-e7e29-default-rtdb.firebaseio.com\",\n//   projectId: \"spotifybuds-e7e29\",\n//   storageBucket: \"spotifybuds-e7e29.appspot.com\",\n//   messagingSenderId: \"566960468786\",\n//   appId: \"1:566960468786:web:cb73617f63fc5f79e45d2b\",\n//   measurementId: \"G-N3X3577Z70\"\n//  }; \n\n// initializeApp(firebaseConfig);\n\n// const App = () => {\n//   useEffect(() => {\n//     fetchUserData();\n//     const interval = setInterval(getLocation, 30000); // Update every 30 seconds\n//     return () => clearInterval(interval); // Clean up the interval on component unmount\n//   }, []);\n\n//   const fetchUserData = () => {\n//     const db = getDatabase();\n//     const usersRef = ref(db, \"Users\");\n\n//     onValue(usersRef, (snapshot) => {\n//       const userData = snapshot.val();\n//       if (userData) {\n//         const markers = Object.values(userData).map((user) => {\n//           const { latitude, longitude } = user;\n//           console.log(\"user: \", user);\n//           return [`${user.userName}'s Location`, latitude, longitude];\n//         });\n\n//         initMap(markers);\n//       }\n//     });\n//   };\n\n//   const getLocation = () => {\n//     fetchUserData();\n//   };\n\n//   const initMap = (markers) => {\n//     const loadMap = () => {\n//       const mapOptions = {\n//         center: { lat: markers[0][1], lng: markers[0][2] },\n//         zoom: 13,\n//         mapTypeId: 'roadmap'\n//       };\n\n//       const map = new window.google.maps.Map(document.getElementById(\"mapCanvas\"), mapOptions);\n\n//       const bounds = new window.google.maps.LatLngBounds();\n\n//       const infoWindow = new window.google.maps.InfoWindow();\n\n//       markers.forEach((markerData) => {\n//         const [title, lat, lng] = markerData;\n//         console.log(\"Title:\", title);\n//         const position = new window.google.maps.LatLng(lat, lng);\n\n//         bounds.extend(position);\n\n//         const marker = new window.google.maps.Marker({\n//           position: position,\n//           map: map,\n//           title: title\n//         });\n//         console.log(\"Title:\", title);\n\n//         window.google.maps.event.addListener(marker, 'click', () => {\n//           infoWindow.setContent(`<div class=\"info_content\">\n//             <h2>${title}</h2>\n//             <h3>Latitude: ${lat}, Longitude: ${lng}</h3>\n//             <p>Additional information about the user or location.</p>\n//           </div>`);\n//           infoWindow.open(map, marker);\n//         });\n//       });\n\n//       map.fitBounds(bounds);\n//       map.setZoom(14);\n//     };\n\n//     const getLocation = () => {\n//       fetchUserData();\n//     };\n\n//     if (window.google && window.google.maps) {\n//       // Google Maps API is already loaded\n//       loadMap();\n//     } else {\n//       // Load the Google Maps API script\n//       const googleMapsScript = document.createElement('script');\n//       googleMapsScript.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyCGAxuT2e4fr6HcwemlAGCNJ6zsxlpUsdQ`;\n//       googleMapsScript.defer = true;\n//       googleMapsScript.onload = loadMap;\n//       document.head.appendChild(googleMapsScript);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h2>Geolocation Finder for SpotifyBuds</h2>\n//       <div id=\"mapCanvas\" style={{ height: \"800px\" }}></div>\n//     </div>\n//   );\n// };\n\n// export default App;\nimport React, { useEffect } from 'react';\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport { initializeApp } from \"firebase/app\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDX1CXAtkqj9Tg1HVYwlcocpkMxB-Y4NTw\",\n  authDomain: \"spotifybuds-e7e29.firebaseapp.com\",\n  databaseURL: \"https://spotifybuds-e7e29-default-rtdb.firebaseio.com\",\n  projectId: \"spotifybuds-e7e29\",\n  storageBucket: \"spotifybuds-e7e29.appspot.com\",\n  messagingSenderId: \"566960468786\",\n  appId: \"1:566960468786:web:cb73617f63fc5f79e45d2b\",\n  measurementId: \"G-N3X3577Z70\"\n};\ninitializeApp(firebaseConfig);\nconst App = () => {\n  _s();\n  useEffect(() => {\n    fetchUserData();\n    const interval = setInterval(fetchUserData, 30000); // Update every 30 seconds\n    return () => clearInterval(interval); // Clean up the interval on component unmount\n  }, []);\n  const fetchUserData = () => {\n    const db = getDatabase();\n    const usersRef = ref(db, \"Users\");\n    onValue(usersRef, snapshot => {\n      const userData = snapshot.val();\n      if (userData) {\n        const user = userData[user10];\n        const {\n          latitude,\n          longitude\n        } = user;\n        const markers = [[`${user.userName}'s Location`, latitude, longitude]];\n        initMap(markers);\n      }\n    });\n  };\n  const initMap = markers => {\n    const loadMap = () => {\n      const mapOptions = {\n        center: {\n          lat: markers[0][1],\n          lng: markers[0][2]\n        },\n        zoom: 13,\n        mapTypeId: 'roadmap'\n      };\n      const map = new window.google.maps.Map(document.getElementById(\"mapCanvas\"), mapOptions);\n      const infoWindow = new window.google.maps.InfoWindow();\n      const [title, lat, lng] = markers[0];\n      const position = new window.google.maps.LatLng(lat, lng);\n      const marker = new window.google.maps.Marker({\n        position: position,\n        map: map,\n        title: title\n      });\n      window.google.maps.event.addListener(marker, 'click', () => {\n        infoWindow.setContent(`<div class=\"info_content\">\n          <h2>${title}</h2>\n          <h3>Latitude: ${lat}, Longitude: ${lng}</h3>\n          <p>Additional information about the user or location.</p>\n        </div>`);\n        infoWindow.open(map, marker);\n      });\n      map.setCenter(position);\n      map.setZoom(14);\n    };\n    if (window.google && window.google.maps) {\n      // Google Maps API is already loaded\n      loadMap();\n    } else {\n      // Load the Google Maps API script\n      const googleMapsScript = document.createElement('script');\n      googleMapsScript.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyCGAxuT2e4fr6HcwemlAGCNJ6zsxlpUsdQ`;\n      googleMapsScript.defer = true;\n      googleMapsScript.onload = loadMap;\n      document.head.appendChild(googleMapsScript);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Geolocation Finder for SpotifyBuds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mapCanvas\",\n      style: {\n        height: \"800px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","getDatabase","ref","onValue","initializeApp","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","_s","fetchUserData","interval","setInterval","clearInterval","db","usersRef","snapshot","userData","val","user","user10","latitude","longitude","markers","userName","initMap","loadMap","mapOptions","center","lat","lng","zoom","mapTypeId","map","window","google","maps","Map","document","getElementById","infoWindow","InfoWindow","title","position","LatLng","marker","Marker","event","addListener","setContent","open","setCenter","setZoom","googleMapsScript","createElement","src","defer","onload","head","appendChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","style","height","_c","$RefreshReg$"],"sources":["/Users/aahilali/Documents/GitHub/SpotifyAppCS35L/src/App.js"],"sourcesContent":["\n// import React, { useEffect } from 'react';\n// import { getDatabase, ref, onValue } from \"firebase/database\";\n// import { initializeApp } from \"firebase/app\";\n// import './App.css';\n\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyDX1CXAtkqj9Tg1HVYwlcocpkMxB-Y4NTw\",\n//   authDomain: \"spotifybuds-e7e29.firebaseapp.com\",\n//   databaseURL: \"https://spotifybuds-e7e29-default-rtdb.firebaseio.com\",\n//   projectId: \"spotifybuds-e7e29\",\n//   storageBucket: \"spotifybuds-e7e29.appspot.com\",\n//   messagingSenderId: \"566960468786\",\n//   appId: \"1:566960468786:web:cb73617f63fc5f79e45d2b\",\n//   measurementId: \"G-N3X3577Z70\"\n//  }; \n\n// initializeApp(firebaseConfig);\n\n// const App = () => {\n//   useEffect(() => {\n//     fetchUserData();\n//     const interval = setInterval(getLocation, 30000); // Update every 30 seconds\n//     return () => clearInterval(interval); // Clean up the interval on component unmount\n//   }, []);\n\n//   const fetchUserData = () => {\n//     const db = getDatabase();\n//     const usersRef = ref(db, \"Users\");\n\n//     onValue(usersRef, (snapshot) => {\n//       const userData = snapshot.val();\n//       if (userData) {\n//         const markers = Object.values(userData).map((user) => {\n//           const { latitude, longitude } = user;\n//           console.log(\"user: \", user);\n//           return [`${user.userName}'s Location`, latitude, longitude];\n//         });\n\n//         initMap(markers);\n//       }\n//     });\n//   };\n\n//   const getLocation = () => {\n//     fetchUserData();\n//   };\n\n//   const initMap = (markers) => {\n//     const loadMap = () => {\n//       const mapOptions = {\n//         center: { lat: markers[0][1], lng: markers[0][2] },\n//         zoom: 13,\n//         mapTypeId: 'roadmap'\n//       };\n\n//       const map = new window.google.maps.Map(document.getElementById(\"mapCanvas\"), mapOptions);\n\n//       const bounds = new window.google.maps.LatLngBounds();\n\n//       const infoWindow = new window.google.maps.InfoWindow();\n\n//       markers.forEach((markerData) => {\n//         const [title, lat, lng] = markerData;\n//         console.log(\"Title:\", title);\n//         const position = new window.google.maps.LatLng(lat, lng);\n\n//         bounds.extend(position);\n\n//         const marker = new window.google.maps.Marker({\n//           position: position,\n//           map: map,\n//           title: title\n//         });\n//         console.log(\"Title:\", title);\n\n//         window.google.maps.event.addListener(marker, 'click', () => {\n//           infoWindow.setContent(`<div class=\"info_content\">\n//             <h2>${title}</h2>\n//             <h3>Latitude: ${lat}, Longitude: ${lng}</h3>\n//             <p>Additional information about the user or location.</p>\n//           </div>`);\n//           infoWindow.open(map, marker);\n//         });\n//       });\n\n//       map.fitBounds(bounds);\n//       map.setZoom(14);\n//     };\n\n//     const getLocation = () => {\n//       fetchUserData();\n//     };\n\n//     if (window.google && window.google.maps) {\n//       // Google Maps API is already loaded\n//       loadMap();\n//     } else {\n//       // Load the Google Maps API script\n//       const googleMapsScript = document.createElement('script');\n//       googleMapsScript.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyCGAxuT2e4fr6HcwemlAGCNJ6zsxlpUsdQ`;\n//       googleMapsScript.defer = true;\n//       googleMapsScript.onload = loadMap;\n//       document.head.appendChild(googleMapsScript);\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h2>Geolocation Finder for SpotifyBuds</h2>\n//       <div id=\"mapCanvas\" style={{ height: \"800px\" }}></div>\n//     </div>\n//   );\n// };\n\n// export default App;\nimport React, { useEffect } from 'react';\nimport { getDatabase, ref, onValue } from \"firebase/database\";\nimport { initializeApp } from \"firebase/app\";\nimport './App.css';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDX1CXAtkqj9Tg1HVYwlcocpkMxB-Y4NTw\",\n  authDomain: \"spotifybuds-e7e29.firebaseapp.com\",\n  databaseURL: \"https://spotifybuds-e7e29-default-rtdb.firebaseio.com\",\n  projectId: \"spotifybuds-e7e29\",\n  storageBucket: \"spotifybuds-e7e29.appspot.com\",\n  messagingSenderId: \"566960468786\",\n  appId: \"1:566960468786:web:cb73617f63fc5f79e45d2b\",\n  measurementId: \"G-N3X3577Z70\"\n }; \n\ninitializeApp(firebaseConfig);\n\nconst App = () => {\n  useEffect(() => {\n    fetchUserData();\n    const interval = setInterval(fetchUserData, 30000); // Update every 30 seconds\n    return () => clearInterval(interval); // Clean up the interval on component unmount\n  }, []);\n\n  const fetchUserData = () => {\n    const db = getDatabase();\n    const usersRef = ref(db, \"Users\");\n\n    onValue(usersRef, (snapshot) => {\n      const userData = snapshot.val();\n      if (userData) {\n        const user = userData[user10];\n        const { latitude, longitude } = user;\n\n        const markers = [[`${user.userName}'s Location`, latitude, longitude]];\n\n        initMap(markers);\n      }\n    });\n  };\n\n  const initMap = (markers) => {\n    const loadMap = () => {\n      const mapOptions = {\n        center: { lat: markers[0][1], lng: markers[0][2] },\n        zoom: 13,\n        mapTypeId: 'roadmap'\n      };\n\n      const map = new window.google.maps.Map(document.getElementById(\"mapCanvas\"), mapOptions);\n\n      const infoWindow = new window.google.maps.InfoWindow();\n\n      const [title, lat, lng] = markers[0];\n      const position = new window.google.maps.LatLng(lat, lng);\n\n      const marker = new window.google.maps.Marker({\n        position: position,\n        map: map,\n        title: title\n      });\n\n      window.google.maps.event.addListener(marker, 'click', () => {\n        infoWindow.setContent(`<div class=\"info_content\">\n          <h2>${title}</h2>\n          <h3>Latitude: ${lat}, Longitude: ${lng}</h3>\n          <p>Additional information about the user or location.</p>\n        </div>`);\n        infoWindow.open(map, marker);\n      });\n\n      map.setCenter(position);\n      map.setZoom(14);\n    };\n\n    if (window.google && window.google.maps) {\n      // Google Maps API is already loaded\n      loadMap();\n    } else {\n      // Load the Google Maps API script\n      const googleMapsScript = document.createElement('script');\n      googleMapsScript.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyCGAxuT2e4fr6HcwemlAGCNJ6zsxlpUsdQ`;\n      googleMapsScript.defer = true;\n      googleMapsScript.onload = loadMap;\n      document.head.appendChild(googleMapsScript);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h2>Geolocation Finder for SpotifyBuds</h2>\n      <div id=\"mapCanvas\" style={{ height: \"800px\" }}></div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}