{"ast":null,"code":"// Used for delegating node actions when browser APIs aren't available\n// like in SSR websites.\nexport const isDOMAvailable = typeof window !== 'undefined' && !!window.document?.createElement;\nexport const canUseEventListeners = isDOMAvailable && !!(window.addEventListener || window.attachEvent);\nexport const canUseViewport = isDOMAvailable && !!window.screen;\nexport const isAsyncDebugging = false;","map":{"version":3,"names":["isDOMAvailable","window","document","createElement","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","isAsyncDebugging"],"sources":["/Users/arjunsnair/Documents/GitHub/SpotifyAppCS35L/node_modules/expo-modules-core/src/environment/browser.web.ts"],"sourcesContent":["declare global {\n  // Add IE-specific interface to Window\n  interface Window {\n    attachEvent(event: string, listener: EventListener): boolean;\n  }\n}\n\n// Used for delegating node actions when browser APIs aren't available\n// like in SSR websites.\nexport const isDOMAvailable = typeof window !== 'undefined' && !!window.document?.createElement;\nexport const canUseEventListeners =\n  isDOMAvailable && !!(window.addEventListener || window.attachEvent);\nexport const canUseViewport = isDOMAvailable && !!window.screen;\nexport const isAsyncDebugging = false;\n"],"mappings":"AAOA;AACA;AACA,OAAO,MAAMA,cAAc,GAAG,OAAOC,MAAM,KAAK,WAAW,IAAI,CAAC,CAACA,MAAM,CAACC,QAAQ,EAAEC,aAAa;AAC/F,OAAO,MAAMC,oBAAoB,GAC/BJ,cAAc,IAAI,CAAC,EAAEC,MAAM,CAACI,gBAAgB,IAAIJ,MAAM,CAACK,WAAW,CAAC;AACrE,OAAO,MAAMC,cAAc,GAAGP,cAAc,IAAI,CAAC,CAACC,MAAM,CAACO,MAAM;AAC/D,OAAO,MAAMC,gBAAgB,GAAG,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}