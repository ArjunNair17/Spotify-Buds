{"ast":null,"code":"var _jsxFileName = \"/Users/arjunsnair/Documents/GitHub/SpotifyAppCS35L/src/SpotifyPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getDatabse, ref, set } from \"firebase/database\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientID = \"4db376ff1b0941de8908d1748f1eb266\";\nconst redirectURL = \"http://localhost:3000/main\";\nconst MainComponent = () => {\n  _s();\n  const [name, setName] = useState(\"Nothing Currently Playing\");\n  const [refreshToken, setRefreshToken] = useState(\"\");\n  const [expirationTime, setExpirationTime] = useState(100000);\n  const [accessToken, setToken] = useState(\"\");\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const code = params.get('code');\n    const handleAuthentication = async () => {\n      if (!code) {\n        redirectToAuthCodeFlow(clientID);\n      } else {\n        const storedAccessToken = window.localStorage.getItem('accessToken');\n        if (storedAccessToken) {\n          setToken(storedAccessToken);\n          const profile = await fetchProfile(storedAccessToken);\n          console.log(profile);\n          if (profile !== null) {\n            console.log(profile.item.name);\n            setName(profile.item.name);\n          } else {\n            setName(\"Nothing is playing\");\n          }\n        } else {\n          const accessToken = await getAccessToken(clientID, code);\n          setToken(accessToken);\n          window.localStorage.setItem('accessToken', accessToken);\n          const profile = await fetchProfile(accessToken);\n          if (profile !== null) {\n            console.log(profile.item.name);\n            setName(profile.item.name);\n          } else {\n            setName(\"Nothing is Playing\");\n          }\n        }\n      }\n    };\n    handleAuthentication();\n  }, []);\n  const refresh = async () => {\n    const profile = await fetchProfile(accessToken);\n    if (profile !== null) {\n      console.log(profile.item.name);\n      setName(profile.item.name);\n    }\n  };\n  async function redirectToAuthCodeFlow(clientId) {\n    const verifier = generateCodeVerifier(128);\n    const challenge = await generateCodeChallenge(verifier);\n    localStorage.setItem(\"verifier\", verifier);\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"response_type\", \"code\");\n    params.append(\"redirect_uri\", redirectURL);\n    params.append(\"scope\", \"user-read-currently-playing user-read-recently-played\");\n    params.append(\"code_challenge_method\", \"S256\");\n    params.append(\"code_challenge\", challenge);\n    document.location = `https://accounts.spotify.com/authorize?${params.toString()}`;\n  }\n  function generateCodeVerifier(length) {\n    let text = '';\n    let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n  async function generateCodeChallenge(codeVerifier) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(codeVerifier);\n    const digest = await window.crypto.subtle.digest('SHA-256', data);\n    return btoa(String.fromCharCode(...new Uint8Array(digest))).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n  }\n  async function getAccessToken(clientId, code) {\n    const verifier = localStorage.getItem(\"verifier\");\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"grant_type\", \"authorization_code\");\n    params.append(\"code\", code);\n    params.append(\"redirect_uri\", redirectURL);\n    params.append(\"code_verifier\", verifier);\n    const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: params\n    });\n    const {\n      access_token,\n      refresh_token,\n      expires_in\n    } = await result.json();\n    window.localStorage.setItem(\"refreshToken\", refresh_token);\n    window.localStorage.setItem(\"expires_in\", expires_in);\n    setExpirationTime(expires_in);\n    setRefreshToken(refreshToken);\n    return access_token;\n  }\n  async function doRefreshToken(clientId, code) {\n    const verifier = localStorage.getItem(\"verifier\");\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"grant_type\", \"refresh_token\");\n    params.append(\"refresh_token\", refreshToken);\n    params.append(\"redirect_uri\", redirectURL);\n    params.append(\"code_verifier\", verifier);\n    const response = await fetch(\"https://accounts.spotify.com/api/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: params\n    });\n    const responseJson = await response.json();\n    if (responseJson.error) {\n      await getAccessToken();\n    } else {\n      const {\n        access_token: newAccessToken,\n        refresh_token: newRefreshToken,\n        expires_in: expiresIn\n      } = responseJson;\n      setToken(newAccessToken);\n      const expirationTime = new Date().getTime() + expiresIn * 1000;\n      await setUserData('accessToken', newAccessToken);\n      if (newRefreshToken) {\n        setRefreshToken(newRefreshToken);\n      }\n      setExpirationTime(expirationTime);\n    }\n  }\n  async function fetchProfile(token) {\n    const result = await fetch(\"https://api.spotify.com/v1/me/player/currently-playing\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(\"Result: \" + result.status);\n    if (result.status != 204) {\n      return await result.json();\n    } else {\n      console.log(\"Token: \" + token);\n      return null;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => refresh(),\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s(MainComponent, \"yASzLnEMO1I5cELJLJidlTXCr0E=\");\n_c = MainComponent;\nexport default MainComponent;\nvar _c;\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"names":["React","useEffect","useState","getDatabse","ref","set","jsxDEV","_jsxDEV","clientID","redirectURL","MainComponent","_s","name","setName","refreshToken","setRefreshToken","expirationTime","setExpirationTime","accessToken","setToken","params","URLSearchParams","window","location","search","code","get","handleAuthentication","redirectToAuthCodeFlow","storedAccessToken","localStorage","getItem","profile","fetchProfile","console","log","item","getAccessToken","setItem","refresh","clientId","verifier","generateCodeVerifier","challenge","generateCodeChallenge","append","document","toString","length","text","possible","i","charAt","Math","floor","random","codeVerifier","encoder","TextEncoder","data","encode","digest","crypto","subtle","btoa","String","fromCharCode","Uint8Array","replace","result","fetch","method","headers","body","access_token","refresh_token","expires_in","json","doRefreshToken","response","responseJson","error","newAccessToken","newRefreshToken","expiresIn","Date","getTime","setUserData","token","Authorization","status","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/arjunsnair/Documents/GitHub/SpotifyAppCS35L/src/SpotifyPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getDatabse, ref, set } from \"firebase/database\";\nconst clientID = \"4db376ff1b0941de8908d1748f1eb266\";\nconst redirectURL = \"http://localhost:3000/main\";\n\n\nconst MainComponent = () => {\n\n\n\n\n\n\n  const [name, setName] = useState(\"Nothing Currently Playing\");\n  const [refreshToken, setRefreshToken] = useState(\"\");\n  const [expirationTime, setExpirationTime] = useState(100000);\n  const [accessToken, setToken] = useState(\"\");\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const code = params.get('code');\n\n    const handleAuthentication = async () => {\n      if (!code) {\n        redirectToAuthCodeFlow(clientID);\n      } else {\n        const storedAccessToken = window.localStorage.getItem('accessToken');\n        if (storedAccessToken) {\n          setToken(storedAccessToken);\n          const profile = await fetchProfile(storedAccessToken);\n          console.log(profile);\n          if (profile !== null) {\n\n            console.log(profile.item.name)\n            setName(profile.item.name);\n\n          }\n          else {\n            setName(\"Nothing is playing\")\n          }\n        } else {\n          const accessToken = await getAccessToken(clientID, code);\n          setToken(accessToken);\n          window.localStorage.setItem('accessToken', accessToken);\n          const profile = await fetchProfile(accessToken);\n          if (profile !== null) {\n\n            console.log(profile.item.name)\n            setName(profile.item.name);\n\n          }\n          else {\n            setName(\"Nothing is Playing\");\n          }\n        }\n      }\n    };\n\n    handleAuthentication();\n  }, []);\n\n  const refresh = async () => {\n    const profile = await fetchProfile(accessToken);\n\n    if (profile !== null) {\n\n      console.log(profile.item.name)\n      setName(profile.item.name);\n\n    }\n  }\n\n  async function redirectToAuthCodeFlow(clientId) {\n    const verifier = generateCodeVerifier(128);\n    const challenge = await generateCodeChallenge(verifier);\n\n    localStorage.setItem(\"verifier\", verifier);\n\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"response_type\", \"code\");\n    params.append(\"redirect_uri\", redirectURL);\n    params.append(\"scope\", \"user-read-currently-playing user-read-recently-played\");\n    params.append(\"code_challenge_method\", \"S256\");\n    params.append(\"code_challenge\", challenge);\n\n    document.location = `https://accounts.spotify.com/authorize?${params.toString()}`;\n  }\n\n  function generateCodeVerifier(length) {\n    let text = '';\n    let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n\n  async function generateCodeChallenge(codeVerifier) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(codeVerifier);\n    const digest = await window.crypto.subtle.digest('SHA-256', data);\n    return btoa(String.fromCharCode(...new Uint8Array(digest)))\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .replace(/=+$/, '');\n  }\n\n  async function getAccessToken(clientId, code) {\n    const verifier = localStorage.getItem(\"verifier\");\n\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"grant_type\", \"authorization_code\");\n    params.append(\"code\", code);\n    params.append(\"redirect_uri\", redirectURL);\n    params.append(\"code_verifier\", verifier);\n\n    const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: params\n    });\n\n    const { access_token, refresh_token, expires_in } = await result.json();\n    window.localStorage.setItem(\"refreshToken\", refresh_token);\n    window.localStorage.setItem(\"expires_in\", expires_in);\n    setExpirationTime(expires_in);\n    setRefreshToken(refreshToken);\n    return access_token;\n  }\n\n\n  async function doRefreshToken(clientId, code) {\n    const verifier = localStorage.getItem(\"verifier\");\n\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"grant_type\", \"refresh_token\");\n    params.append(\"refresh_token\", refreshToken);\n    params.append(\"redirect_uri\", redirectURL);\n    params.append(\"code_verifier\", verifier);\n\n    const response = await fetch(\"https://accounts.spotify.com/api/token\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: params\n    });\n\n    const responseJson = await response.json();\n    if (responseJson.error) {\n      await getAccessToken();\n    } else {\n      const {\n        access_token: newAccessToken,\n        refresh_token: newRefreshToken,\n        expires_in: expiresIn,\n      } = responseJson;\n\n       setToken(newAccessToken);\n\n      const expirationTime = new Date().getTime() + expiresIn * 1000;\n      await setUserData('accessToken', newAccessToken);\n      if (newRefreshToken) {\n        setRefreshToken(newRefreshToken);\n      }\n      setExpirationTime(expirationTime);\n    }\n\n  }\n\n\n  async function fetchProfile(token) {\n    const result = await fetch(\"https://api.spotify.com/v1/me/player/currently-playing\", {\n      method: \"GET\",\n      headers: { Authorization: `Bearer ${token}` }\n    });\n\n    console.log(\"Result: \" + result.status);\n\n    if (result.status != 204) {\n      return await result.json();\n    }\n    else {\n      console.log(\"Token: \" + token);\n      return null;\n    }\n  }\n\n  return (\n    <div>\n      <h1>{name}</h1>\n      <button onClick={() => refresh()}>Refresh</button>\n    </div>\n  );\n};\n\nexport default MainComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}