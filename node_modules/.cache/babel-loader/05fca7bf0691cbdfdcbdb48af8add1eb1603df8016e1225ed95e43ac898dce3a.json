{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harri\\\\OneDrive\\\\Documents\\\\GitHub\\\\SpotifyAppCS35L\\\\src\\\\SpotifyPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport firebase from 'firebase/app';\nimport { EmailAuthCredential, getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { getDatabase, ref, set, get, onValue } from \"firebase/database\";\nimport { app } from './Firebase/config';\nimport \"./list.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientID = \"4db376ff1b0941de8908d1748f1eb266\";\nconst redirectURL = \"http://localhost:3000/main\";\nconst MainComponent = () => {\n  _s();\n  const [name, setName] = useState(\"Nothing Currently Playing.\");\n  const [currentAccessToken, setToken] = useState(\"\");\n  const [uid, setUid] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [latitude, setLatitude] = useState(0.0);\n  const [longitude, setLongitude] = useState(0.0);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    const position = navigator.geolocation.getCurrentPosition(position => {\n      setLatitude(position.coords.latitude);\n      setLongitude(position.coords.longitude);\n    });\n    const auth = getAuth();\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/auth.user\n        const uid = user.uid;\n        const currentEmail = user.email;\n        console.log(\"userEmail \" + currentEmail);\n        setEmail(currentEmail);\n        setUid(uid);\n        // ...\n      } else {\n        console.log(\"signed out\");\n        // User is signed out\n        // ...\n      }\n    });\n\n    const params = new URLSearchParams(window.location.search);\n    const code = params.get('code');\n    const handleAuthentication = async () => {\n      if (!code) {\n        redirectToAuthCodeFlow(clientID);\n      } else {\n        console.log(\"got here!\");\n        if (currentAccessToken === \"\") {\n          await getAccessToken(clientID, code);\n        }\n        const profile = await fetchProfile();\n        //setToken(current);\n        if (profile !== null) {\n          if (profile.is_playing === true) {\n            setName(profile.item.name);\n            writeData(profile.item.name);\n          } else {\n            setName(\"Nothing is currently playing.\");\n            getUsers();\n          }\n        } else {\n          setName(\"Nothing is currently playing.\");\n          getUsers();\n        }\n      }\n    };\n    handleAuthentication();\n  }, []);\n  function writeData(currentPlayingSong) {\n    console.log(email);\n    const db = getDatabase();\n    set(ref(db, \"users/\" + uid), {\n      userName: email,\n      currentSong: currentPlayingSong,\n      latitude: latitude,\n      longitude: longitude\n    });\n  }\n  const getUsers = async () => {\n    const db = getDatabase();\n    const usersRef = ref(db, 'users');\n    get(usersRef).then(snapshot => {\n      if (snapshot.exists()) {\n        const users = snapshot.val();\n        console.log(users);\n        const closest = findClosestUsers(latitude, longitude, users, 500);\n        console.log(\"closests: \" + closest[0]);\n        setUsers(closest);\n      }\n    });\n  };\n\n  //   if (dataSnapshot.exists()) {\n  //     const users = dataSnapshot.val();\n  //     console.log(\"users: \" + users.name);\n\n  //   } else {\n  //     console.log('No users found');\n  //   }\n  // } catch (error) {\n  //   console.log('Error getting users:', error);\n  // }\n\n  const params = new URLSearchParams(window.location.search);\n  const code = params.get('code');\n  const refresh = async () => {\n    if (currentAccessToken === \"\") {\n      await getAccessToken(clientID, code);\n    }\n    const profile = await fetchProfile();\n    if (profile !== null) {\n      if (profile.is_playing === true) {\n        setName(profile.item.name);\n        writeData(profile.item.name);\n        getUsers();\n      } else {\n        getUsers();\n        setName(\"Nothing is currently playing.\");\n      }\n    } else {\n      getUsers();\n      setName(\"Nothing is currently playing.\");\n    }\n    console.log(\"users: \" + users[0].user);\n  };\n  async function redirectToAuthCodeFlow(clientId) {\n    const verifier = generateCodeVerifier(128);\n    const challenge = await generateCodeChallenge(verifier);\n    localStorage.setItem(\"verifier\", verifier);\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"response_type\", \"code\");\n    params.append(\"redirect_uri\", redirectURL);\n    params.append(\"scope\", \"user-read-private user-read-email user-read-currently-playing user-read-recently-played\");\n    params.append(\"code_challenge_method\", \"S256\");\n    params.append(\"code_challenge\", challenge);\n    document.location = `https://accounts.spotify.com/authorize?${params.toString()}`;\n  }\n  function generateCodeVerifier(length) {\n    let text = '';\n    let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n  async function generateCodeChallenge(codeVerifier) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(codeVerifier);\n    const digest = await window.crypto.subtle.digest('SHA-256', data);\n    return btoa(String.fromCharCode(...new Uint8Array(digest))).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n  }\n  async function getAccessToken(clientId, code) {\n    const verifier = localStorage.getItem(\"verifier\");\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"grant_type\", \"authorization_code\");\n    params.append(\"code\", code);\n    params.append(\"redirect_uri\", \"http://localhost:3000/main\");\n    params.append(\"code_verifier\", verifier);\n    const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: params\n    });\n    const {\n      access_token\n    } = await result.json();\n    if (access_token !== undefined) {\n      setToken(access_token);\n      localStorage.setItem(\"accessToken\", access_token);\n    }\n    return access_token;\n  }\n  async function fetchProfile() {\n    const token = localStorage.getItem(\"accessToken\");\n    const result = await fetch(\"https://api.spotify.com/v1/me/player/currently-playing\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (result.status === 204) {\n      return null;\n    }\n    return await result.json();\n  }\n  function calculateDistance(lat1, lon1, lat2, lon2) {\n    const earthRadiusInFeet = 20903520; // Approximate Earth radius in feet\n    const dLat = toRadians(lat2 - lat1);\n    const dLon = toRadians(lon2 - lon1);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distanceInFeet = earthRadiusInFeet * c;\n    const roundedDistance = distanceInFeet.toFixed(2); // Round to two decimal places\n    return roundedDistance;\n  }\n  function toRadians(degrees) {\n    return degrees * (Math.PI / 180);\n  }\n  function findClosestUsers(userLat, userLon, database, radius) {\n    const distances = [];\n    //onsole.log(\"Database: \" + database);\n    for (const person in database) {\n      //console.log(database[person]);\n      const distance = calculateDistance(userLat, userLon, database[person].latitude, database[person].longitude);\n      //console.log(\"distance: \" + distance);\n      if (distance <= radius) {\n        distances.push({\n          user: database[person].userName,\n          distance: distance,\n          song: database[person].currentSong\n        });\n      }\n    }\n    distances.sort((a, b) => a.distance - b.distance);\n    console.log(\"this.state.distances:\", distances);\n    return distances;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: users.map(item => {\n          console.log(item[0]); // Log the userName to the console\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.user, \" \", \" \", \" \", item.song]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => refresh(),\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n};\n_s(MainComponent, \"IaGpmrPvlYw+5dIp86VUVqK2kg0=\");\n_c = MainComponent;\nexport default MainComponent;\nvar _c;\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"names":["React","useEffect","useState","firebase","EmailAuthCredential","getAuth","onAuthStateChanged","getDatabase","ref","set","get","onValue","app","jsxDEV","_jsxDEV","clientID","redirectURL","MainComponent","_s","name","setName","currentAccessToken","setToken","uid","setUid","email","setEmail","latitude","setLatitude","longitude","setLongitude","users","setUsers","position","navigator","geolocation","getCurrentPosition","coords","auth","user","currentEmail","console","log","params","URLSearchParams","window","location","search","code","handleAuthentication","redirectToAuthCodeFlow","getAccessToken","profile","fetchProfile","is_playing","item","writeData","getUsers","currentPlayingSong","db","userName","currentSong","usersRef","then","snapshot","exists","val","closest","findClosestUsers","refresh","clientId","verifier","generateCodeVerifier","challenge","generateCodeChallenge","localStorage","setItem","append","document","toString","length","text","possible","i","charAt","Math","floor","random","codeVerifier","encoder","TextEncoder","data","encode","digest","crypto","subtle","btoa","String","fromCharCode","Uint8Array","replace","getItem","result","fetch","method","headers","body","access_token","json","undefined","token","Authorization","status","calculateDistance","lat1","lon1","lat2","lon2","earthRadiusInFeet","dLat","toRadians","dLon","a","sin","cos","c","atan2","sqrt","distanceInFeet","roundedDistance","toFixed","degrees","PI","userLat","userLon","database","radius","distances","person","distance","push","song","sort","b","className","children","map","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/harri/OneDrive/Documents/GitHub/SpotifyAppCS35L/src/SpotifyPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport firebase from 'firebase/app'\r\nimport { EmailAuthCredential, getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { getDatabase, ref, set, get, onValue } from \"firebase/database\";\r\nimport { app } from './Firebase/config';\r\nimport \"./list.css\";\r\n\r\nconst clientID = \"4db376ff1b0941de8908d1748f1eb266\";\r\nconst redirectURL = \"http://localhost:3000/main\";\r\n\r\n\r\nconst MainComponent = () => {\r\n  const [name, setName] = useState(\"Nothing Currently Playing.\");\r\n  const [currentAccessToken, setToken] = useState(\"\");\r\n  const [uid, setUid] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [latitude, setLatitude] = useState(0.0);\r\n  const [longitude, setLongitude] = useState(0.0);\r\n  const [users, setUsers] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const position = navigator.geolocation.getCurrentPosition((position) => {\r\n      setLatitude(position.coords.latitude);\r\n      setLongitude(position.coords.longitude);\r\n\r\n    });\r\n    const auth = getAuth();\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        // User is signed in, see docs for a list of available properties\r\n        // https://firebase.google.com/docs/reference/js/auth.user\r\n        const uid = user.uid;\r\n        const currentEmail = user.email;\r\n        console.log(\"userEmail \" + currentEmail);\r\n        setEmail(currentEmail);\r\n        setUid(uid);\r\n        // ...\r\n      } else {\r\n        console.log(\"signed out\");\r\n        // User is signed out\r\n        // ...\r\n      }\r\n    });\r\n\r\n    const params = new URLSearchParams(window.location.search);\r\n    const code = params.get('code');\r\n\r\n    const handleAuthentication = async () => {\r\n      if (!code) {\r\n        redirectToAuthCodeFlow(clientID);\r\n      } else {\r\n        console.log(\"got here!\");\r\n        if (currentAccessToken === \"\") {\r\n          await getAccessToken(clientID, code);\r\n        }\r\n\r\n\r\n        const profile = await fetchProfile();\r\n        //setToken(current);\r\n        if (profile !== null) {\r\n          if (profile.is_playing === true) {\r\n            setName(profile.item.name);\r\n            writeData(profile.item.name);\r\n\r\n          }\r\n          else {\r\n            setName(\"Nothing is currently playing.\")\r\n            getUsers();\r\n          }\r\n        }\r\n\r\n\r\n        else {\r\n          setName(\"Nothing is currently playing.\")\r\n          getUsers();\r\n        }\r\n      }\r\n    };\r\n\r\n    handleAuthentication();\r\n\r\n\r\n\r\n\r\n\r\n  }, []);\r\n\r\n  function writeData(currentPlayingSong) {\r\n\r\n\r\n    console.log(email);\r\n    const db = getDatabase();\r\n    set(ref(db, \"users/\" + uid), {\r\n      userName: email,\r\n      currentSong: currentPlayingSong,\r\n      latitude: latitude,\r\n      longitude: longitude\r\n    });\r\n  }\r\n\r\n  const getUsers = async () => {\r\n    const db = getDatabase();\r\n\r\n    const usersRef = ref(db, 'users');\r\n    get(usersRef).then((snapshot) => {\r\n      if (snapshot.exists()) {\r\n        const users = snapshot.val();\r\n        console.log(users);\r\n        const closest = findClosestUsers(latitude, longitude, users, 500);\r\n        console.log(\"closests: \" + closest[0]);\r\n        setUsers(closest);\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  //   if (dataSnapshot.exists()) {\r\n  //     const users = dataSnapshot.val();\r\n  //     console.log(\"users: \" + users.name);\r\n\r\n\r\n  //   } else {\r\n  //     console.log('No users found');\r\n  //   }\r\n  // } catch (error) {\r\n  //   console.log('Error getting users:', error);\r\n  // }\r\n\r\n\r\n\r\n  const params = new URLSearchParams(window.location.search);\r\n  const code = params.get('code')\r\n\r\n\r\n  const refresh = async () => {\r\n    if (currentAccessToken === \"\") {\r\n      await getAccessToken(clientID, code);\r\n    }\r\n    const profile = await fetchProfile();\r\n\r\n    if (profile !== null) {\r\n      if (profile.is_playing === true) {\r\n        setName(profile.item.name);\r\n        writeData(profile.item.name);\r\n        getUsers();\r\n      }\r\n      else {\r\n        getUsers();\r\n        setName(\"Nothing is currently playing.\")\r\n      }\r\n    }\r\n\r\n\r\n    else {\r\n      getUsers();\r\n      setName(\"Nothing is currently playing.\")\r\n    }\r\n\r\n    console.log(\"users: \" + users[0].user);\r\n\r\n  }\r\n\r\n  async function redirectToAuthCodeFlow(clientId) {\r\n    const verifier = generateCodeVerifier(128);\r\n    const challenge = await generateCodeChallenge(verifier);\r\n\r\n    localStorage.setItem(\"verifier\", verifier);\r\n\r\n    const params = new URLSearchParams();\r\n    params.append(\"client_id\", clientId);\r\n    params.append(\"response_type\", \"code\");\r\n    params.append(\"redirect_uri\", redirectURL);\r\n    params.append(\"scope\", \"user-read-private user-read-email user-read-currently-playing user-read-recently-played\");\r\n    params.append(\"code_challenge_method\", \"S256\");\r\n    params.append(\"code_challenge\", challenge);\r\n\r\n    document.location = `https://accounts.spotify.com/authorize?${params.toString()}`;\r\n  }\r\n\r\n  function generateCodeVerifier(length) {\r\n    let text = '';\r\n    let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n  }\r\n\r\n  async function generateCodeChallenge(codeVerifier) {\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(codeVerifier);\r\n    const digest = await window.crypto.subtle.digest('SHA-256', data);\r\n    return btoa(String.fromCharCode(...new Uint8Array(digest)))\r\n      .replace(/\\+/g, '-')\r\n      .replace(/\\//g, '_')\r\n      .replace(/=+$/, '');\r\n  }\r\n\r\n  async function getAccessToken(clientId, code) {\r\n    const verifier = localStorage.getItem(\"verifier\");\r\n\r\n    const params = new URLSearchParams();\r\n    params.append(\"client_id\", clientId);\r\n    params.append(\"grant_type\", \"authorization_code\");\r\n    params.append(\"code\", code);\r\n    params.append(\"redirect_uri\", \"http://localhost:3000/main\");\r\n    params.append(\"code_verifier\", verifier);\r\n\r\n    const result = await fetch(\"https://accounts.spotify.com/api/token\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n      body: params\r\n    });\r\n\r\n    const { access_token } = await result.json();\r\n\r\n    if (access_token !== undefined) {\r\n      setToken(access_token);\r\n      localStorage.setItem(\"accessToken\", access_token);\r\n    }\r\n    return access_token;\r\n  }\r\n\r\n  async function fetchProfile() {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    const result = await fetch(\"https://api.spotify.com/v1/me/player/currently-playing\", {\r\n      method: \"GET\",\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    if (result.status === 204) {\r\n      return null;\r\n    }\r\n    return await result.json();\r\n  }\r\n\r\n  function calculateDistance(lat1, lon1, lat2, lon2) {\r\n    const earthRadiusInFeet = 20903520; // Approximate Earth radius in feet\r\n    const dLat = toRadians(lat2 - lat1);\r\n    const dLon = toRadians(lon2 - lon1);\r\n    const a =\r\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2)) *\r\n      Math.sin(dLon / 2) * Math.sin(dLon / 2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    const distanceInFeet = earthRadiusInFeet * c;\r\n    const roundedDistance = distanceInFeet.toFixed(2); // Round to two decimal places\r\n    return roundedDistance;\r\n  }\r\n\r\n  function toRadians(degrees) {\r\n    return degrees * (Math.PI / 180);\r\n  }\r\n\r\n  function findClosestUsers(userLat, userLon, database, radius) {\r\n    const distances = [];\r\n    //onsole.log(\"Database: \" + database);\r\n    for (const person in database) {\r\n      //console.log(database[person]);\r\n      const distance = calculateDistance(userLat, userLon, database[person].latitude, database[person].longitude);\r\n      //console.log(\"distance: \" + distance);\r\n      if (distance <= radius) {\r\n        distances.push({ user: database[person].userName, distance: distance, song: database[person].currentSong });\r\n      }\r\n    }\r\n\r\n    distances.sort((a, b) => a.distance - b.distance);\r\n    console.log(\"this.state.distances:\", distances);\r\n    return distances;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"box\">\r\n      <div className=\"list-container\">\r\n        <ul className=\"list\">\r\n          {users.map(item => {\r\n            console.log(item[0]); // Log the userName to the console\r\n            return (\r\n              <li key={item.id}>{item.user} {\" \"} {item.song}</li>\r\n            );\r\n          })}\r\n        </ul>\r\n\r\n      </div>\r\n      <button onClick={() => refresh()}>Refresh</button>\r\n    </div>\r\n  );\r\n\r\n\r\n};\r\n\r\nexport default MainComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}