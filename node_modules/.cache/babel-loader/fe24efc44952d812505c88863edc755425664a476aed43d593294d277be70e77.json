{"ast":null,"code":"var _jsxFileName = \"/Users/arjunsnair/Documents/GitHub/SpotifyAppCS35L/src/SpotifyPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport firebase from 'firebase/app';\nimport { EmailAuthCredential, getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { getDatabase, ref, set, get, onValue, update } from \"firebase/database\";\nimport { app } from './Firebase/config';\nimport \"./list.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientID = \"4db376ff1b0941de8908d1748f1eb266\";\nconst redirectURL = \"http://localhost:3000/main\";\nconst MainComponent = () => {\n  _s();\n  const [name, setName] = useState(\"Nothing Currently Playing.\");\n  const [currentAccessToken, setToken] = useState(\"\");\n  const [uid, setUid] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [latitude, setLatitude] = useState(0.0);\n  const [longitude, setLongitude] = useState(0.0);\n  const [users, setUsers] = useState([]);\n  const updatePosition = () => {\n    const position = navigator.geolocation.getCurrentPosition(position => {\n      console.log(position.coords.latitude);\n      console.log(position.coords.longitude);\n      setLatitude(position.coords.latitude);\n      setLongitude(position.coords.longitude);\n    });\n  };\n  useEffect(() => {\n    updatePosition();\n    const auth = getAuth();\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/auth.user\n        const uid = user.uid;\n        const currentEmail = user.email;\n        console.log(\"userEmail \" + currentEmail);\n        setEmail(currentEmail);\n        setUid(uid);\n        // ...\n      } else {\n        console.log(\"signed out\");\n        // User is signed out\n        // ...\n      }\n    });\n\n    const params = new URLSearchParams(window.location.search);\n    const code = params.get('code');\n    const handleAuthentication = async () => {\n      if (!code) {\n        redirectToAuthCodeFlow(clientID);\n      } else {\n        console.log(\"got here!\");\n        if (currentAccessToken === \"\") {\n          await getAccessToken(clientID, code);\n        }\n        const relevantData = await fetchProfile();\n        const profile = relevantData[0];\n        const artists = relevantData[1];\n        if (profile !== null) {\n          if (profile.is_playing === true) {\n            setName(profile.item.name);\n            writeData(relevantData);\n            console.log(\"artists: \" + artists);\n            getUsers();\n          } else {\n            setName(\"Nothing is currently playing.\");\n            getUsers();\n          }\n        } else {\n          setName(\"Nothing is currently playing.\");\n          getUsers();\n        }\n      }\n    };\n    handleAuthentication();\n  }, []);\n  function writeData(data) {\n    console.log(data);\n    if (data[0] !== undefined) {\n      const db = getDatabase();\n      set(ref(db, \"users/\" + uid), {\n        userName: email,\n        currentSong: data[0].item.name,\n        latitude: latitude,\n        longitude: longitude,\n        topArtists: data[1]\n      });\n    }\n  }\n  const getUsers = async () => {\n    const db = getDatabase();\n    const usersRef = ref(db, 'users');\n    get(usersRef).then(snapshot => {\n      if (snapshot.exists()) {\n        const users = snapshot.val();\n        console.log(users);\n        const closest = findClosestUsers(latitude, longitude, users, 30);\n        console.log(\"closests: \" + closest[0].user);\n        setUsers(closest);\n      }\n    });\n  };\n\n  //   if (dataSnapshot.exists()) {\n  //     const users = dataSnapshot.val();\n  //     console.log(\"users: \" + users.name);\n\n  //   } else {\n  //     console.log('No users found');\n  //   }\n  // } catch (error) {\n  //   console.log('Error getting users:', error);\n  // }\n\n  const params = new URLSearchParams(window.location.search);\n  const code = params.get('code');\n  const refresh = async () => {\n    updatePosition();\n    if (currentAccessToken === \"\") {\n      await getAccessToken(clientID, code);\n    }\n    const relevantData = await fetchProfile();\n    const profile = relevantData[0];\n    const artists = relevantData[1];\n    if (profile !== null) {\n      if (profile.is_playing === true) {\n        setName(profile.item.name);\n        writeData(profile.item.name);\n        console.log(artists);\n        getUsers();\n      } else {\n        getUsers();\n        setName(\"Nothing is currently playing.\");\n      }\n    } else {\n      getUsers();\n      setName(\"Nothing is currently playing.\");\n    }\n  };\n  async function redirectToAuthCodeFlow(clientId) {\n    const verifier = generateCodeVerifier(128);\n    const challenge = await generateCodeChallenge(verifier);\n    localStorage.setItem(\"verifier\", verifier);\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"response_type\", \"code\");\n    params.append(\"redirect_uri\", redirectURL);\n    params.append(\"scope\", \"user-read-private user-read-email user-read-currently-playing user-read-recently-played user-top-read\");\n    params.append(\"code_challenge_method\", \"S256\");\n    params.append(\"code_challenge\", challenge);\n    document.location = `https://accounts.spotify.com/authorize?${params.toString()}`;\n  }\n  function generateCodeVerifier(length) {\n    let text = '';\n    let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n  async function generateCodeChallenge(codeVerifier) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(codeVerifier);\n    const digest = await window.crypto.subtle.digest('SHA-256', data);\n    return btoa(String.fromCharCode(...new Uint8Array(digest))).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n  }\n  async function getAccessToken(clientId, code) {\n    const verifier = localStorage.getItem(\"verifier\");\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"grant_type\", \"authorization_code\");\n    params.append(\"code\", code);\n    params.append(\"redirect_uri\", \"http://localhost:3000/main\");\n    params.append(\"code_verifier\", verifier);\n    const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: params\n    });\n    const {\n      access_token\n    } = await result.json();\n    if (access_token !== undefined) {\n      setToken(access_token);\n      localStorage.setItem(\"accessToken\", access_token);\n    }\n    return access_token;\n  }\n  async function fetchProfile() {\n    const token = localStorage.getItem(\"accessToken\");\n    const result = await fetch(\"https://api.spotify.com/v1/me/player/currently-playing\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (result.status === 204) {\n      return null;\n    }\n    const currentPlaying = await result.json();\n    const artistsTop = await fetch(\"https://api.spotify.com/v1/me/top/artists\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const artistTopJson = await artistsTop.json();\n    const returnArr = [currentPlaying, artistTopJson.items.slice(0, 3)];\n    return returnArr;\n  }\n  function calculateDistance(lat1, lon1, lat2, lon2) {\n    const earthRadiusInFeet = 20903520; // Approximate Earth radius in feet\n    const dLat = toRadians(lat2 - lat1);\n    const dLon = toRadians(lon2 - lon1);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distanceInFeet = earthRadiusInFeet * c;\n    const roundedDistance = distanceInFeet.toFixed(2); // Round to two decimal places\n    return roundedDistance;\n  }\n  function toRadians(degrees) {\n    return degrees * (Math.PI / 180);\n  }\n  function findClosestUsers(userLat, userLon, database, radius) {\n    const distances = [];\n    //onsole.log(\"Database: \" + database);\n    for (const person in database) {\n      //console.log(database[person]);\n      const distance = calculateDistance(userLat, userLon, database[person].latitude, database[person].longitude);\n      //console.log(\"distance: \" + distance);\n      console.log(\"distance; \" + distance);\n      if (distance <= radius) {\n        distances.push({\n          user: database[person].userName,\n          distance: distance,\n          song: database[person].currentSong\n        });\n      }\n    }\n    distances.sort((a, b) => a.distance - b.distance);\n    console.log(\"this.state.distances:\", distances);\n    return distances;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: users.length > 0 ? users.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.user, \" \", item.song]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No users available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => refresh(),\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 5\n  }, this);\n};\n_s(MainComponent, \"IaGpmrPvlYw+5dIp86VUVqK2kg0=\");\n_c = MainComponent;\nexport default MainComponent;\nvar _c;\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"names":["React","useEffect","useState","firebase","EmailAuthCredential","getAuth","onAuthStateChanged","getDatabase","ref","set","get","onValue","update","app","jsxDEV","_jsxDEV","clientID","redirectURL","MainComponent","_s","name","setName","currentAccessToken","setToken","uid","setUid","email","setEmail","latitude","setLatitude","longitude","setLongitude","users","setUsers","updatePosition","position","navigator","geolocation","getCurrentPosition","console","log","coords","auth","user","currentEmail","params","URLSearchParams","window","location","search","code","handleAuthentication","redirectToAuthCodeFlow","getAccessToken","relevantData","fetchProfile","profile","artists","is_playing","item","writeData","getUsers","data","undefined","db","userName","currentSong","topArtists","usersRef","then","snapshot","exists","val","closest","findClosestUsers","refresh","clientId","verifier","generateCodeVerifier","challenge","generateCodeChallenge","localStorage","setItem","append","document","toString","length","text","possible","i","charAt","Math","floor","random","codeVerifier","encoder","TextEncoder","encode","digest","crypto","subtle","btoa","String","fromCharCode","Uint8Array","replace","getItem","result","fetch","method","headers","body","access_token","json","token","Authorization","status","currentPlaying","artistsTop","artistTopJson","returnArr","items","slice","calculateDistance","lat1","lon1","lat2","lon2","earthRadiusInFeet","dLat","toRadians","dLon","a","sin","cos","c","atan2","sqrt","distanceInFeet","roundedDistance","toFixed","degrees","PI","userLat","userLon","database","radius","distances","person","distance","push","song","sort","b","className","children","map","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/arjunsnair/Documents/GitHub/SpotifyAppCS35L/src/SpotifyPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport firebase from 'firebase/app'\nimport { EmailAuthCredential, getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { getDatabase, ref, set, get, onValue, update } from \"firebase/database\";\nimport { app } from './Firebase/config';\nimport \"./list.css\";\n\nconst clientID = \"4db376ff1b0941de8908d1748f1eb266\";\nconst redirectURL = \"http://localhost:3000/main\";\n\n\nconst MainComponent = () => {\n  const [name, setName] = useState(\"Nothing Currently Playing.\");\n  const [currentAccessToken, setToken] = useState(\"\");\n  const [uid, setUid] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [latitude, setLatitude] = useState(0.0);\n  const [longitude, setLongitude] = useState(0.0);\n  const [users, setUsers] = useState([]);\n  \n\n  const updatePosition = () => {\n    const position = navigator.geolocation.getCurrentPosition((position) => {\n      console.log(position.coords.latitude);\n      console.log(position.coords.longitude);\n      setLatitude(position.coords.latitude);\n      setLongitude(position.coords.longitude);\n\n    });\n  };\n\n  useEffect(() => {\n    updatePosition();\n\n    const auth = getAuth();\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/auth.user\n        const uid = user.uid;\n        const currentEmail = user.email;\n        console.log(\"userEmail \" + currentEmail);\n        setEmail(currentEmail);\n        setUid(uid);\n        // ...\n      } else {\n        console.log(\"signed out\");\n        // User is signed out\n        // ...\n      }\n    });\n\n    const params = new URLSearchParams(window.location.search);\n    const code = params.get('code');\n\n    const handleAuthentication = async () => {\n      if (!code) {\n        redirectToAuthCodeFlow(clientID);\n      } else {\n        console.log(\"got here!\");\n        if (currentAccessToken === \"\") {\n          await getAccessToken(clientID, code);\n        }\n\n\n        const relevantData = await fetchProfile();\n\n        const profile = relevantData[0];\n        const artists = relevantData[1];\n        if (profile !== null) {\n          if (profile.is_playing === true) {\n            setName(profile.item.name);\n            writeData(relevantData);\n            console.log(\"artists: \" + artists);\n            getUsers();\n          }\n          else {\n            setName(\"Nothing is currently playing.\")\n            getUsers();\n          }\n        }\n\n\n        else {\n          setName(\"Nothing is currently playing.\")\n          getUsers();\n        }\n      }\n    };\n\n    handleAuthentication();\n\n\n\n\n\n  }, []);\n\n  function writeData(data) {\n    console.log(data);\n    if(data[0] !== undefined) {\n      const db = getDatabase();\n      set(ref(db, \"users/\" + uid), {\n        userName: email,\n        currentSong: data[0].item.name,\n        latitude: latitude,\n        longitude: longitude,\n        topArtists: data[1]\n      });\n    }\n    \n  }\n\n  const getUsers = async () => {\n    const db = getDatabase();\n\n    const usersRef = ref(db, 'users');\n    get(usersRef).then((snapshot) => {\n      if (snapshot.exists()) {\n        const users = snapshot.val();\n        console.log(users);\n        const closest = findClosestUsers(latitude, longitude, users, 30);\n        console.log(\"closests: \" + closest[0].user);\n        setUsers(closest);\n\n      }\n    });\n  }\n\n  //   if (dataSnapshot.exists()) {\n  //     const users = dataSnapshot.val();\n  //     console.log(\"users: \" + users.name);\n\n\n  //   } else {\n  //     console.log('No users found');\n  //   }\n  // } catch (error) {\n  //   console.log('Error getting users:', error);\n  // }\n\n\n\n  const params = new URLSearchParams(window.location.search);\n  const code = params.get('code')\n\n\n  const refresh = async () => {\n    updatePosition();\n    if (currentAccessToken === \"\") {\n      await getAccessToken(clientID, code);\n    }\n    const relevantData = await fetchProfile();\n\n    const profile = relevantData[0];\n    const artists = relevantData[1];\n    if (profile !== null) {\n      if (profile.is_playing === true) {\n        setName(profile.item.name);\n        writeData(profile.item.name);\n        console.log(artists);\n        getUsers();\n      }\n      else {\n        getUsers();\n        setName(\"Nothing is currently playing.\")\n      }\n    }\n\n\n    else {\n      getUsers();\n      setName(\"Nothing is currently playing.\")\n    }\n\n\n  }\n\n  async function redirectToAuthCodeFlow(clientId) {\n    const verifier = generateCodeVerifier(128);\n    const challenge = await generateCodeChallenge(verifier);\n\n    localStorage.setItem(\"verifier\", verifier);\n\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"response_type\", \"code\");\n    params.append(\"redirect_uri\", redirectURL);\n    params.append(\"scope\", \"user-read-private user-read-email user-read-currently-playing user-read-recently-played user-top-read\");\n    params.append(\"code_challenge_method\", \"S256\");\n    params.append(\"code_challenge\", challenge);\n\n    document.location = `https://accounts.spotify.com/authorize?${params.toString()}`;\n  }\n\n  function generateCodeVerifier(length) {\n    let text = '';\n    let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n\n  async function generateCodeChallenge(codeVerifier) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(codeVerifier);\n    const digest = await window.crypto.subtle.digest('SHA-256', data);\n    return btoa(String.fromCharCode(...new Uint8Array(digest)))\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .replace(/=+$/, '');\n  }\n\n  async function getAccessToken(clientId, code) {\n    const verifier = localStorage.getItem(\"verifier\");\n\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"grant_type\", \"authorization_code\");\n    params.append(\"code\", code);\n    params.append(\"redirect_uri\", \"http://localhost:3000/main\");\n    params.append(\"code_verifier\", verifier);\n\n    const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: params\n    });\n\n    const { access_token } = await result.json();\n\n    if (access_token !== undefined) {\n      setToken(access_token);\n      localStorage.setItem(\"accessToken\", access_token);\n    }\n    return access_token;\n  }\n\n  async function fetchProfile() {\n    const token = localStorage.getItem(\"accessToken\");\n    const result = await fetch(\"https://api.spotify.com/v1/me/player/currently-playing\", {\n      method: \"GET\",\n      headers: { Authorization: `Bearer ${token}` }\n    });\n    if (result.status === 204) {\n      return null;\n    }\n\n    const currentPlaying = await result.json();\n    const artistsTop = await fetch(\"https://api.spotify.com/v1/me/top/artists\", {\n      method: \"GET\",\n      headers: { Authorization: `Bearer ${token}` }\n    });\n\n    const artistTopJson = await artistsTop.json();\n\n\n    const returnArr = [currentPlaying, artistTopJson.items.slice(0,3)]\n    return returnArr;\n  }\n\n  function calculateDistance(lat1, lon1, lat2, lon2) {\n    const earthRadiusInFeet = 20903520; // Approximate Earth radius in feet\n    const dLat = toRadians(lat2 - lat1);\n    const dLon = toRadians(lon2 - lon1);\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2)) *\n      Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distanceInFeet = earthRadiusInFeet * c;\n    const roundedDistance = distanceInFeet.toFixed(2); // Round to two decimal places\n    return roundedDistance;\n  }\n\n  function toRadians(degrees) {\n    return degrees * (Math.PI / 180);\n  }\n\n  function findClosestUsers(userLat, userLon, database, radius) {\n    const distances = [];\n    //onsole.log(\"Database: \" + database);\n    for (const person in database) {\n      //console.log(database[person]);\n      const distance = calculateDistance(userLat, userLon, database[person].latitude, database[person].longitude);\n      //console.log(\"distance: \" + distance);\n      console.log(\"distance; \" + distance);\n      if (distance <= radius) {\n        distances.push({ user: database[person].userName, distance: distance, song: database[person].currentSong });\n      }\n    }\n\n    distances.sort((a, b) => a.distance - b.distance);\n    console.log(\"this.state.distances:\", distances);\n    return distances;\n  }\n\n\n\n\n\n\n\n\n\n\n  return (\n    <div className=\"box\">\n      <div className=\"list-container\">\n        <ul className=\"list\">\n          {users.length > 0 ? (\n            users.map((item) => (\n              <li key={item.id}>\n                {item.user} {item.song}\n              </li>\n            ))\n          ) : (\n            <p>No users available.</p>\n          )}\n        </ul>\n\n      </div>\n      <button onClick={() => refresh()}>Refresh</button>\n    </div>\n  );\n\n\n};\n\nexport default MainComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}