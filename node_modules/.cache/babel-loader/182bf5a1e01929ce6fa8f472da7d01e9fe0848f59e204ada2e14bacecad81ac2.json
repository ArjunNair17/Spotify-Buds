{"ast":null,"code":"var _jsxFileName = \"/Users/aahilali/Documents/GitHub/SpotifyAppCS35L/src/components/crud/index.js\";\n// import React from \"react\";\n// import StartFirebase from \"../firebaseConfig/index\";\n// import { ref, set, get, update, remove, child } from \"firebase/database\";\n\n// export class Crud extends React.Component{\n\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             db: '',\n//             username: '',\n//             latitude: '',\n//             longitude: '', \n//         }\n//         this.interface = this.interface.bind(this);\n//     }\n\n//     componentDidMount(){\n//         this.setState({\n//             db: StartFirebase()\n//         });\n//     }\n\n//     interface(event){\n//         const id = event.target.id;\n//         if(id == 'insertBtn'){\n//             this.insertData();\n//         }\n//         else if(id == 'updateBtn'){\n//             this.insertData();\n//         }\n//         else if(id == 'deleteBtn'){\n//             this.insertData();\n//         }\n//         else if(id == 'selectBtn'){\n//             this.insertData();\n//         }\n\n//     }\n//     getAllInputs(){\n//         return {\n//             username: this.state.username,\n//             latitude: Number(this.state.latitude),\n//             longitude: Number(this.state.longitude)\n//         }\n//     }\n\n//     insertData(){\n//         const db = this.state.db;\n//         const data = this.getAllInputs();\n\n//         set(ref(db, 'User/'+data.username),\n//         {\n//             latitude: data.latitude,\n//             longitude: data.longitude\n//         })\n//         .then(()=>{alert('data was added successfully')})\n//         .catch((error)=>{alert(\"there was an error, details: \"+ error)});\n//     }\n//     }\n\nimport React from \"react\";\nimport StartFirebase from \"../firebaseConfig/index\";\nimport { ref, set } from \"firebase/database\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Crud extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      db: \"\",\n      username: \"\",\n      latitude: \"\",\n      longitude: \"\"\n    };\n    this.interface = this.interface.bind(this);\n    this.insertData = this.insertData.bind(this); // Fix the binding here\n  }\n\n  componentDidMount() {\n    this.setState({\n      db: StartFirebase()\n    });\n  }\n  interface(event) {\n    const id = event.target.id;\n    if (id === \"insertBtn\") {\n      this.insertData();\n    } else if (id === \"updateBtn\") {\n      // Implement the update functionality here\n    } else if (id === \"deleteBtn\") {\n      // Implement the delete functionality here\n    } else if (id === \"selectBtn\") {\n      // Implement the select functionality here\n    }\n  }\n  getAllInputs() {\n    return {\n      username: this.state.username,\n      latitude: Number(this.state.latitude),\n      longitude: Number(this.state.longitude)\n    };\n  }\n  insertData() {\n    const db = this.state.db;\n    const inputData = this.getAllInputs(); // Rename the variable to avoid conflict\n\n    set(ref(db, 'User/' + inputData.username), {\n      latitude: inputData.latitude,\n      longitude: inputData.longitude\n    }).then(() => {\n      alert('Data was added successfully');\n    }).catch(error => {\n      alert('There was an error, details: ' + error);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","StartFirebase","ref","set","jsxDEV","_jsxDEV","Crud","Component","constructor","props","state","db","username","latitude","longitude","interface","bind","insertData","componentDidMount","setState","event","id","target","getAllInputs","Number","inputData","then","alert","catch","error","render","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/aahilali/Documents/GitHub/SpotifyAppCS35L/src/components/crud/index.js"],"sourcesContent":["// import React from \"react\";\n// import StartFirebase from \"../firebaseConfig/index\";\n// import { ref, set, get, update, remove, child } from \"firebase/database\";\n\n// export class Crud extends React.Component{\n\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             db: '',\n//             username: '',\n//             latitude: '',\n//             longitude: '', \n//         }\n//         this.interface = this.interface.bind(this);\n//     }\n\n//     componentDidMount(){\n//         this.setState({\n//             db: StartFirebase()\n//         });\n//     }\n\n//     interface(event){\n//         const id = event.target.id;\n//         if(id == 'insertBtn'){\n//             this.insertData();\n//         }\n//         else if(id == 'updateBtn'){\n//             this.insertData();\n//         }\n//         else if(id == 'deleteBtn'){\n//             this.insertData();\n//         }\n//         else if(id == 'selectBtn'){\n//             this.insertData();\n//         }\n\n//     }\n//     getAllInputs(){\n//         return {\n//             username: this.state.username,\n//             latitude: Number(this.state.latitude),\n//             longitude: Number(this.state.longitude)\n//         }\n//     }\n\n//     insertData(){\n//         const db = this.state.db;\n//         const data = this.getAllInputs();\n\n//         set(ref(db, 'User/'+data.username),\n//         {\n//             latitude: data.latitude,\n//             longitude: data.longitude\n//         })\n//         .then(()=>{alert('data was added successfully')})\n//         .catch((error)=>{alert(\"there was an error, details: \"+ error)});\n//     }\n//     }\n\nimport React from \"react\";\nimport StartFirebase from \"../firebaseConfig/index\";\nimport { ref, set } from \"firebase/database\";\n\nexport class Crud extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      db: \"\",\n      username: \"\",\n      latitude: \"\",\n      longitude: \"\",\n    };\n    this.interface = this.interface.bind(this);\n    this.insertData = this.insertData.bind(this); // Fix the binding here\n  }\n\n  componentDidMount() {\n    this.setState({\n      db: StartFirebase(),\n    });\n  }\n\n  interface(event) {\n    const id = event.target.id;\n    if (id === \"insertBtn\") {\n      this.insertData();\n    } else if (id === \"updateBtn\") {\n      // Implement the update functionality here\n    } else if (id === \"deleteBtn\") {\n      // Implement the delete functionality here\n    } else if (id === \"selectBtn\") {\n      // Implement the select functionality here\n    }\n  }\n\n  getAllInputs() {\n    return {\n      username: this.state.username,\n      latitude: Number(this.state.latitude),\n      longitude: Number(this.state.longitude),\n    };\n  }\n\n  insertData() {\n    const db = this.state.db;\n    const inputData = this.getAllInputs(); // Rename the variable to avoid conflict\n  \n    set(ref(db, 'User/' + inputData.username), {\n      latitude: inputData.latitude,\n      longitude: inputData.longitude,\n    })\n      .then(() => {\n        alert('Data was added successfully');\n      })\n      .catch((error) => {\n        alert('There was an error, details: ' + error);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        {/* Your component JSX */}\n      </div>\n    );\n  }\n}\n"],"mappings":";AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,yBAAyB;AACnD,SAASC,GAAG,EAAEC,GAAG,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,OAAO,MAAMC,IAAI,SAASN,KAAK,CAACO,SAAS,CAAC;EACxCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,EAAE,EAAE,EAAE;MACNC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE;IACb,CAAC;IACD,IAAI,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC;IAC1C,IAAI,CAACC,UAAU,GAAG,IAAI,CAACA,UAAU,CAACD,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EAChD;;EAEAE,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACC,QAAQ,CAAC;MACZR,EAAE,EAAEV,aAAa,CAAC;IACpB,CAAC,CAAC;EACJ;EAEAc,SAASA,CAACK,KAAK,EAAE;IACf,MAAMC,EAAE,GAAGD,KAAK,CAACE,MAAM,CAACD,EAAE;IAC1B,IAAIA,EAAE,KAAK,WAAW,EAAE;MACtB,IAAI,CAACJ,UAAU,CAAC,CAAC;IACnB,CAAC,MAAM,IAAII,EAAE,KAAK,WAAW,EAAE;MAC7B;IAAA,CACD,MAAM,IAAIA,EAAE,KAAK,WAAW,EAAE;MAC7B;IAAA,CACD,MAAM,IAAIA,EAAE,KAAK,WAAW,EAAE;MAC7B;IAAA;EAEJ;EAEAE,YAAYA,CAAA,EAAG;IACb,OAAO;MACLX,QAAQ,EAAE,IAAI,CAACF,KAAK,CAACE,QAAQ;MAC7BC,QAAQ,EAAEW,MAAM,CAAC,IAAI,CAACd,KAAK,CAACG,QAAQ,CAAC;MACrCC,SAAS,EAAEU,MAAM,CAAC,IAAI,CAACd,KAAK,CAACI,SAAS;IACxC,CAAC;EACH;EAEAG,UAAUA,CAAA,EAAG;IACX,MAAMN,EAAE,GAAG,IAAI,CAACD,KAAK,CAACC,EAAE;IACxB,MAAMc,SAAS,GAAG,IAAI,CAACF,YAAY,CAAC,CAAC,CAAC,CAAC;;IAEvCpB,GAAG,CAACD,GAAG,CAACS,EAAE,EAAE,OAAO,GAAGc,SAAS,CAACb,QAAQ,CAAC,EAAE;MACzCC,QAAQ,EAAEY,SAAS,CAACZ,QAAQ;MAC5BC,SAAS,EAAEW,SAAS,CAACX;IACvB,CAAC,CAAC,CACCY,IAAI,CAAC,MAAM;MACVC,KAAK,CAAC,6BAA6B,CAAC;IACtC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBF,KAAK,CAAC,+BAA+B,GAAGE,KAAK,CAAC;IAChD,CAAC,CAAC;EACN;EAEAC,MAAMA,CAAA,EAAG;IACP,oBACEzB,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEK,CAAC;EAEV;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}