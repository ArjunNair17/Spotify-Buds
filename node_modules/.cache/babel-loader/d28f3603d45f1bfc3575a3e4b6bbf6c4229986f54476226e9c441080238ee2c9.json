{"ast":null,"code":"var _jsxFileName = \"/Users/arjunsnair/Documents/GitHub/SpotifyAppCS35L/src/SpotifyPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getDatabse, ref, set } from \"firebase/database\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientID = \"4db376ff1b0941de8908d1748f1eb266\";\nconst redirectURL = \"http://localhost:3000/main\";\nconst MainComponent = () => {\n  _s();\n  const [name, setName] = useState(\"Nothing Currently Playing\");\n  const [accessToken, setToken] = useState(\"\");\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const code = params.get('code');\n    const handleAuthentication = async () => {\n      if (!code) {\n        redirectToAuthCodeFlow(clientID);\n      } else {\n        const storedAccessToken = window.localStorage.getItem('accessToken');\n        if (storedAccessToken) {\n          setToken(storedAccessToken);\n          const profile = await fetchProfile(storedAccessToken);\n          if (profile !== null) {\n            if (profile.item) {\n              console.log(profile.item.name);\n              setName(profile.item.name);\n            }\n          } else {\n            setName(\"Nothing is playing\");\n          }\n        } else {\n          const accessToken = await getAccessToken(clientID, code);\n          setToken(accessToken);\n          window.localStorage.setItem('accessToken', accessToken);\n          const profile = await fetchProfile(accessToken);\n          if (profile.item !== null) {\n            if (profile.item) {\n              console.log(profile.item.name);\n              setName(profile.item.name);\n            }\n          } else {\n            setName(\"Nothing is Playing\");\n          }\n        }\n      }\n    };\n    handleAuthentication();\n  }, []);\n  const refresh = async () => {\n    const profile = await fetchProfile(accessToken);\n    if (profile !== null) {\n      if (profile.item) {\n        console.log(profile.item.name);\n        setName(profile.item.name);\n      }\n    }\n  };\n  async function redirectToAuthCodeFlow(clientId) {\n    const verifier = generateCodeVerifier(128);\n    const challenge = await generateCodeChallenge(verifier);\n    localStorage.setItem(\"verifier\", verifier);\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"response_type\", \"code\");\n    params.append(\"redirect_uri\", redirectURL);\n    params.append(\"scope\", \"user-read-currently-playing user-read-recently-played\");\n    params.append(\"code_challenge_method\", \"S256\");\n    params.append(\"code_challenge\", challenge);\n    document.location = `https://accounts.spotify.com/authorize?${params.toString()}`;\n  }\n  function generateCodeVerifier(length) {\n    let text = '';\n    let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n  async function generateCodeChallenge(codeVerifier) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(codeVerifier);\n    const digest = await window.crypto.subtle.digest('SHA-256', data);\n    return btoa(String.fromCharCode(...new Uint8Array(digest))).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n  }\n  async function getAccessToken(clientId, code) {\n    const verifier = localStorage.getItem(\"verifier\");\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"grant_type\", \"authorization_code\");\n    params.append(\"code\", code);\n    params.append(\"redirect_uri\", redirectURL);\n    params.append(\"code_verifier\", verifier);\n    const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: params\n    });\n    const {\n      access_token\n    } = await result.json();\n    return access_token;\n  }\n  async function fetchProfile(token) {\n    const result = await fetch(\"https://api.spotify.com/v1/me/player/currently-playing\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(\"Result: \" + result.status);\n    if (result.status != 204) {\n      return await result.json();\n    } else {\n      console.log(\"Token: \" + token);\n      return null;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => refresh(),\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(MainComponent, \"PGUFeXrcUSopSZeEq+5ioFHbjGA=\");\n_c = MainComponent;\nexport default MainComponent;\nvar _c;\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"names":["React","useEffect","useState","getDatabse","ref","set","jsxDEV","_jsxDEV","clientID","redirectURL","MainComponent","_s","name","setName","accessToken","setToken","params","URLSearchParams","window","location","search","code","get","handleAuthentication","redirectToAuthCodeFlow","storedAccessToken","localStorage","getItem","profile","fetchProfile","item","console","log","getAccessToken","setItem","refresh","clientId","verifier","generateCodeVerifier","challenge","generateCodeChallenge","append","document","toString","length","text","possible","i","charAt","Math","floor","random","codeVerifier","encoder","TextEncoder","data","encode","digest","crypto","subtle","btoa","String","fromCharCode","Uint8Array","replace","result","fetch","method","headers","body","access_token","json","token","Authorization","status","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/arjunsnair/Documents/GitHub/SpotifyAppCS35L/src/SpotifyPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getDatabse, ref, set} from \"firebase/database\";\nconst clientID = \"4db376ff1b0941de8908d1748f1eb266\";\nconst redirectURL = \"http://localhost:3000/main\";\n\n\nconst MainComponent = () => {\n\n\n  \n\n\n\n  const [name, setName] = useState(\"Nothing Currently Playing\");\n  const [accessToken, setToken] = useState(\"\");\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const code = params.get('code');\n\n    const handleAuthentication = async () => {\n      if (!code) {\n        redirectToAuthCodeFlow(clientID);\n      } else {\n        const storedAccessToken = window.localStorage.getItem('accessToken');\n        if (storedAccessToken) {\n          setToken(storedAccessToken);\n          const profile = await fetchProfile(storedAccessToken);\n          if (profile !== null) {\n            if(profile.item) {\n              console.log(profile.item.name)\n              setName(profile.item.name);\n            }\n          }\n          else {\n            setName(\"Nothing is playing\")\n          }\n        } else {\n          const accessToken = await getAccessToken(clientID, code);\n          setToken(accessToken);\n          window.localStorage.setItem('accessToken', accessToken);\n          const profile = await fetchProfile(accessToken);\n          if (profile.item !== null) {\n            if(profile.item) {\n              console.log(profile.item.name)\n              setName(profile.item.name);\n            }\n          }\n          else {\n            setName(\"Nothing is Playing\");\n          }\n        }\n      }\n    };\n\n    handleAuthentication();\n  }, []);\n  \n  const refresh = async () => {\n    const profile = await fetchProfile(accessToken);\n\n    if (profile !== null) {\n      if(profile.item) {\n        console.log(profile.item.name)\n        setName(profile.item.name);\n      }\n    }\n  }\n\n  async function redirectToAuthCodeFlow(clientId) {\n    const verifier = generateCodeVerifier(128);\n    const challenge = await generateCodeChallenge(verifier);\n\n    localStorage.setItem(\"verifier\", verifier);\n\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"response_type\", \"code\");\n    params.append(\"redirect_uri\", redirectURL);\n    params.append(\"scope\", \"user-read-currently-playing user-read-recently-played\");\n    params.append(\"code_challenge_method\", \"S256\");\n    params.append(\"code_challenge\", challenge);\n\n    document.location = `https://accounts.spotify.com/authorize?${params.toString()}`;\n  }\n\n  function generateCodeVerifier(length) {\n    let text = '';\n    let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n\n  async function generateCodeChallenge(codeVerifier) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(codeVerifier);\n    const digest = await window.crypto.subtle.digest('SHA-256', data);\n    return btoa(String.fromCharCode(...new Uint8Array(digest)))\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .replace(/=+$/, '');\n  }\n\n  async function getAccessToken(clientId, code) {\n    const verifier = localStorage.getItem(\"verifier\");\n\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"grant_type\", \"authorization_code\");\n    params.append(\"code\", code);\n    params.append(\"redirect_uri\", redirectURL);\n    params.append(\"code_verifier\", verifier);\n\n    const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: params\n    });\n\n    const { access_token } = await result.json();\n    return access_token;\n  }\n\n  async function fetchProfile(token) {\n    const result = await fetch(\"https://api.spotify.com/v1/me/player/currently-playing\", {\n      method: \"GET\",\n      headers: { Authorization: `Bearer ${token}` }\n    });\n\n    console.log(\"Result: \" + result.status);\n      \n    if(result.status != 204) {\n      return await result.json();\n    }\n    else {\n      console.log(\"Token: \" + token);\n      return null;\n    }\n  }\n\n  return (\n    <div>\n      <h1>{name}</h1>\n      <button onClick={() => refresh()}>Refresh</button>\n    </div>\n  );\n};\n\nexport default MainComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}